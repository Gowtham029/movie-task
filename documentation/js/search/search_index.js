var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.605,1,2.366]],["body/controllers/AppController.html",[0,2.711,1,3.996,2,2.084,3,0.251,4,0.251,5,0.215,6,4.108,7,0.406,8,1.87,9,6.606,10,1.363,11,0.023,12,0.675,13,4.828,14,1.534,15,0.884,16,0.306,17,1.073,18,2.558,19,4.828,20,0.251,21,0.143,22,1.729,23,4.828,24,0.019,25,0.019]],["title/modules/AppModule.html",[26,1.043,27,2.366]],["body/modules/AppModule.html",[1,3.427,2,1.869,3,0.158,4,0.158,5,0.135,8,0.966,11,0.023,12,0.425,14,0.966,16,0.354,17,0.675,20,0.158,21,0.09,24,0.014,25,0.014,26,1.297,27,4.682,28,1.312,29,1.869,30,2.586,31,2.586,32,3.202,33,3.749,34,3.749,35,3.749,36,3.454,37,3.749,38,2.137,39,1.5,40,1.5,41,3.04,42,2.476,43,3.04,44,4.331,45,5.5,46,3.04,47,1.025,48,0.675,49,0.282,50,0.675,51,4.331,52,3.259,53,3.04,54,3.04,55,2.586,56,1.886,57,1.312,58,3.04,59,2.064,60,3.04,61,2.287,62,3.04,63,2.941,64,3.04,65,3.04,66,4.331,67,2.287,68,2.295,69,3.04,70,3.04,71,3.04,72,3.04,73,3.04,74,3.04,75,3.04,76,3.04,77,3.427,78,3.04,79,3.04,80,3.04,81,3.04,82,3.04,83,3.04,84,1.611,85,3.04,86,3.04,87,3.04,88,3.04,89,3.04,90,3.04,91,3.04]],["title/injectables/AuthMiddleware.html",[59,2.366,92,0.984]],["body/injectables/AuthMiddleware.html",[3,0.164,4,0.164,5,0.141,7,0.266,8,1.415,11,0.023,12,0.623,14,1.415,16,0.268,17,0.702,20,0.231,21,0.132,22,1.594,24,0.014,25,0.014,47,1.501,48,0.989,49,0.412,50,0.989,59,4.27,92,1.257,93,1.456,94,2.688,95,1.132,96,3.787,97,4.452,98,4.211,99,3.787,100,5.596,101,2.224,102,5.154,103,1.28,104,3.16,105,3.102,106,3.16,107,4.452,108,3.787,109,3.16,110,3.984,111,3.731,112,4.605,113,5.899,114,3.16,115,3.199,116,4.452,117,2.375,118,5.154,119,1.456,120,1.364,121,2.378,122,2.688,123,3.35,124,3.8,125,3.16,126,3.787,127,2.146,128,1.28,129,1.594,130,3.787,131,1.921,132,3.16,133,2.688,134,4.452,135,3.16,136,3.16,137,1.559,138,1.132,139,2.688,140,2.378]],["title/modules/AuthModule.html",[26,1.043,32,1.846]],["body/modules/AuthModule.html",[3,0.228,4,0.228,5,0.195,11,0.023,16,0.316,17,0.973,20,0.228,21,0.13,24,0.018,25,0.018,26,1.658,28,1.889,29,2.39,32,3.618,38,2.731,39,2.16,40,2.16,42,2.503,84,2.934,105,3.505,122,3.725,141,3.725,142,3.725,143,3.725,144,4.378,145,3.165,146,4.378,147,3.295,148,4.378,149,4.378,150,4.378,151,4.378,152,4.378,153,4.378]],["title/injectables/AuthService.html",[92,0.984,105,1.718]],["body/injectables/AuthService.html",[3,0.143,4,0.143,5,0.123,7,0.232,8,1.283,11,0.023,12,0.735,14,1.778,15,0.841,16,0.273,17,0.613,20,0.21,21,0.12,22,1.882,24,0.013,25,0.013,47,1.773,48,1.168,49,0.442,50,1.168,77,1.872,92,1.14,93,1.27,95,0.987,96,4.471,98,3.037,99,3.434,101,2.522,103,1.116,105,2.759,112,3.037,115,3.539,117,2.422,119,1.27,120,1.19,124,2.741,126,3.434,127,1.872,128,1.116,129,1.882,130,3.434,131,1.19,137,1.36,138,0.987,139,2.346,140,2.075,147,2.075,154,2.346,155,4.036,156,5.256,157,4.036,158,3.451,159,4.036,160,2.757,161,5.844,162,2.757,163,4.036,164,2.757,165,2.757,166,4.036,167,2.757,168,4.775,169,4.775,170,4.036,171,1.86,172,4.036,173,2.757,174,2.757,175,1.872,176,2.757,177,2.757,178,3.037,179,3.037,180,4.036,181,2.741,182,4.036,183,2.757,184,2.075,185,2.757,186,2.346,187,2.757,188,1.991,189,2.757,190,2.346,191,2.075,192,2.757,193,1.872,194,2.757,195,2.757,196,2.346,197,2.346,198,4.036,199,2.757,200,2.757,201,2.757,202,2.757]],["title/classes/CommonMovieDataDto.html",[21,0.103,203,2.622]],["body/classes/CommonMovieDataDto.html",[3,0.21,4,0.21,5,0.18,7,0.34,10,1.749,11,0.023,12,0.866,15,0.931,16,0.273,20,0.21,21,0.156,24,0.017,25,0.017,49,0.574,203,3.958,204,1.21,205,5.463,206,3.041,207,1.399,208,2.226,209,2.226,210,2.368,211,2.226,212,2.218,213,4.041,214,4.041,215,5.259,216,4.041,217,2.744,218,4.041,219,3.438,220,2.444,221,1.141,222,2.226,223,2.508,224,3.168,225,3.343,226,1.363]],["title/classes/CreateMovieDto.html",[21,0.103,227,2.162]],["body/classes/CreateMovieDto.html",[3,0.181,4,0.181,5,0.155,7,0.292,10,1.646,11,0.023,12,0.919,15,1.013,16,0.247,20,0.181,21,0.141,24,0.015,25,0.015,48,0.772,49,0.609,50,1.46,95,1.941,204,1.041,206,2.614,207,1.265,208,2.063,209,2.063,210,2.195,211,2.063,212,2.258,219,2.956,220,2.324,221,0.981,222,2.219,223,2.472,224,2.345,225,2.718,226,1.172,227,2.95,228,5.671,229,3.788,230,3.099,231,3.363,232,3.474,233,2.155,234,3.474,235,2.956,236,3.229,237,2.614,238,3.474,239,1.714,240,3.474,241,2.956,242,3.474,243,3.474,244,3.474,245,2.956,246,2.956]],["title/classes/CreateReviewDto.html",[21,0.103,247,1.992]],["body/classes/CreateReviewDto.html",[3,0.198,4,0.198,5,0.169,7,0.32,10,1.427,11,0.023,12,0.924,15,0.993,16,0.263,20,0.198,21,0.15,24,0.016,25,0.016,49,0.612,50,1.491,95,2.033,204,1.139,207,1.345,208,2.161,209,2.161,210,2.299,211,2.161,212,2.166,220,2.161,221,1.074,222,1.924,223,2.299,226,1.283,239,1.876,247,2.889,248,5.708,249,3.236,250,3.136,251,4.272,252,3.804,253,3.804,254,3.804,255,3.804,256,1.81,257,3.236,258,3.804,259,3.804,260,3.804,261,3.803,262,3.804]],["title/classes/CreateUpdateUserResponseDto.html",[21,0.103,263,2.366]],["body/classes/CreateUpdateUserResponseDto.html",[3,0.139,4,0.139,5,0.119,7,0.225,10,1.866,11,0.023,12,0.924,15,1.017,16,0.205,20,0.139,21,0.117,24,0.013,25,0.013,49,0.612,115,2.683,171,2.387,204,0.801,207,1.051,208,1.786,209,1.786,210,1.9,211,1.786,212,2.071,217,2.681,220,2.538,221,0.755,222,2.385,223,2.538,224,3.028,225,2.962,226,0.902,233,2.45,239,2.315,263,2.681,264,5.017,265,4.136,266,2.877,267,1.66,268,3.992,269,2.486,270,3.992,271,3.992,272,2.683,273,2.486,274,2.683,275,2.315,276,2.676,277,2.676,278,2.676,279,3.531,280,2.676,281,2.676,282,2.676,283,2.971,284,2.676,285,2.676,286,2.676,287,2.676,288,2.676,289,2.676,290,2.676,291,2.276,292,3.531]],["title/classes/CreateUserDto.html",[21,0.103,293,1.846]],["body/classes/CreateUserDto.html",[3,0.169,4,0.169,5,0.145,7,0.274,10,1.856,11,0.023,12,0.919,15,1.02,16,0.236,20,0.169,21,0.135,24,0.015,25,0.015,49,0.609,171,2.613,204,0.976,207,1.21,212,1.629,217,2.212,220,2.534,221,0.92,222,2.414,223,2.569,224,3.129,225,2.6,226,1.099,233,3.251,239,1.607,264,5.01,268,4.458,269,2.776,270,4.458,271,4.458,272,2.995,273,2.776,274,2.995,275,2.585,279,3.423,283,3.423,292,3.943,293,2.41,294,2.212,295,2.995,296,3.258,297,2.772,298,3.258,299,2.772,300,3.258,301,2.772,302,2.772,303,2.772,304,2.772]],["title/classes/GlobalExceptionFilter.html",[21,0.103,63,2.366]],["body/classes/GlobalExceptionFilter.html",[3,0.193,4,0.193,5,0.166,7,0.313,8,1.583,11,0.023,12,0.697,14,1.182,16,0.259,17,0.827,20,0.193,21,0.11,24,0.016,25,0.016,47,1.255,48,0.827,49,0.345,50,0.827,52,2.8,63,3.382,67,2.8,103,2.274,110,2.308,111,2.127,119,2.295,120,1.606,129,2.011,138,1.332,190,5.101,191,2.8,204,1.114,256,1.332,305,3.165,306,3.09,307,5.614,308,3.721,309,4.981,310,5.614,311,5.996,312,3.721,313,5.614,314,3.721,315,3.721,316,3.721,317,3.721,318,3.721,319,5.996,320,3.721,321,3.721,322,4.981,323,3.721,324,4.981,325,5.473,326,3.721,327,3.721,328,3.721,329,2.8,330,3.721,331,3.721,332,3.721,333,3.721]],["title/injectables/LogInterceptor.html",[92,0.984,334,2.162]],["body/injectables/LogInterceptor.html",[3,0.153,4,0.153,5,0.131,7,0.248,8,1.346,11,0.023,12,0.758,14,1.576,15,0.637,16,0.299,17,0.655,18,2.873,20,0.153,21,0.087,22,2.057,24,0.014,25,0.014,47,1.829,48,1.205,49,0.502,50,1.205,92,1.196,93,1.358,103,1.194,110,3.823,111,1.685,112,3.733,120,1.272,121,2.218,123,2.218,127,2.002,128,1.194,129,1.776,133,2.508,138,1.517,158,3.284,196,2.508,256,2.057,334,2.629,335,2.508,336,2.756,337,4.237,338,4.237,339,4.96,340,2.948,341,2.948,342,4.237,343,4.237,344,2.948,345,4.96,346,4.237,347,2.948,348,2.948,349,5.423,350,5.423,351,2.948,352,4.237,353,4.96,354,4.237,355,2.948,356,2.508,357,2.948,358,2.948,359,2.948,360,2.508,361,4.237,362,2.948,363,2.948,364,2.948,365,4.237,366,4.96,367,2.002,368,2.948,369,2.948,370,2.948,371,4.237,372,4.237,373,2.948,374,2.948,375,2.948,376,2.948,377,2.948,378,2.948,379,2.948,380,2.948,381,2.948,382,2.948,383,2.948,384,2.948,385,2.948,386,2.948,387,2.948,388,2.948]],["title/modules/LoggerModule.html",[26,1.043,33,2.162]],["body/modules/LoggerModule.html",[3,0.23,4,0.23,5,0.197,11,0.023,16,0.317,17,0.982,18,3.668,20,0.23,21,0.131,24,0.018,25,0.018,26,1.669,28,1.908,29,2.404,33,4.295,38,2.748,39,2.181,40,2.181,84,2.952,145,3.185,334,4.414,360,3.761,389,3.761,390,3.761,391,3.761,392,4.421,393,4.421]],["title/classes/LoggerService.html",[18,1.846,21,0.103]],["body/classes/LoggerService.html",[3,0.298,4,0.174,5,0.149,7,0.281,8,1.47,11,0.023,12,0.871,14,1.821,15,0.936,16,0.174,18,2.451,20,0.174,21,0.099,22,1.657,24,0.015,25,0.015,47,1.56,48,1.028,49,0.492,50,1.028,52,3.481,103,2.15,108,4.516,128,2.15,129,1.195,138,1.195,158,3.721,171,2.641,191,3.994,204,1,207,1.231,325,3.935,336,3.045,394,2.84,395,5.731,396,5.731,397,4.626,398,4.626,399,4.626,400,3.338,401,4.626,402,3.338,403,3.338,404,3.338,405,3.935,406,4.626,407,3.338,408,4.626,409,3.338,410,3.338,411,3.338,412,3.338,413,3.338,414,3.338,415,3.338,416,3.338,417,3.338,418,3.338,419,3.338,420,3.338,421,3.338,422,3.338,423,5.308,424,2.84,425,2.84,426,3.338]],["title/controllers/LoginController.html",[0,1.605,427,2.366]],["body/controllers/LoginController.html",[0,1.449,2,1.357,3,0.164,4,0.164,5,0.14,7,0.264,8,1.41,10,1.253,11,0.023,12,0.621,14,1.41,16,0.327,17,0.699,20,0.164,21,0.093,22,1.589,24,0.014,25,0.014,47,1.496,48,0.986,49,0.566,50,0.986,68,1.666,95,2,101,2.637,103,1.274,105,2.536,111,3.192,115,3.192,117,2.573,128,1.797,129,2,131,2.41,158,1.798,188,2.189,197,2.676,221,0.888,293,2.351,336,2.045,367,2.136,427,3.013,428,2.676,429,2.367,430,3.775,431,5.141,432,2.676,433,3.654,434,3.145,435,3.145,436,3.491,437,3.145,438,3.775,439,3.145,440,3.896,441,3.145,442,3.145,443,3.145,444,3.339,445,2.367,446,3.869,447,2.367,448,3.869,449,2.939,450,2.676,451,3.775,452,2.136,453,2.367,454,2.676,455,2.676,456,2.136,457,3.145,458,3.145,459,3.145,460,3.339,461,3.145,462,3.145,463,4.437,464,3.145,465,3.145]],["title/modules/LoginModule.html",[26,1.043,34,2.162]],["body/modules/LoginModule.html",[2,2.239,3,0.206,4,0.206,5,0.176,11,0.023,16,0.347,17,0.88,20,0.206,21,0.117,24,0.017,25,0.017,26,1.554,28,1.708,29,2.239,32,3.469,34,4.247,38,2.56,39,1.953,40,1.953,42,2.966,48,0.88,56,2.456,57,1.708,61,2.979,84,2.75,145,2.966,427,3.931,449,4.004,450,3.368,466,3.368,467,3.958,468,3.368,469,3.368,470,3.958,471,3.958,472,2.688,473,3.368,474,3.524,475,3.958,476,2.688,477,3.958,478,2.688]],["title/classes/LoginRequestDto.html",[21,0.103,433,2.162]],["body/classes/LoginRequestDto.html",[3,0.236,4,0.236,5,0.202,7,0.381,10,1.599,11,0.023,12,0.792,15,0.972,16,0.294,20,0.236,21,0.168,24,0.018,25,0.018,49,0.525,204,1.359,207,1.507,220,2.35,221,1.281,222,2.35,223,2.5,226,1.531,239,2.794,275,3.046,295,3.529,433,3.514,479,4.646,480,3.415,481,3.861,482,3.861]],["title/classes/LoginResponseDto.html",[21,0.103,436,2.366]],["body/classes/LoginResponseDto.html",[3,0.257,4,0.257,5,0.22,7,0.416,10,1.398,11,0.023,12,0.692,15,0.898,16,0.257,20,0.257,21,0.147,24,0.019,25,0.019,49,0.459,115,3.668,204,1.483,207,1.59,220,2.442,221,1.398,267,3.072,436,4.057,479,4.496,483,4.951]],["title/injectables/LoginService.html",[92,0.984,449,1.992]],["body/injectables/LoginService.html",[3,0.144,4,0.144,5,0.123,7,0.233,8,1.286,11,0.023,12,0.736,14,1.521,15,0.719,16,0.329,17,0.615,20,0.144,21,0.082,22,1.714,24,0.013,25,0.013,47,1.776,48,1.245,49,0.488,50,1.17,57,1.195,77,1.88,92,1.143,93,1.276,101,2.728,103,1.639,117,2.697,119,2.426,120,1.195,128,1.121,129,2.096,131,2.675,137,2.361,138,1.714,140,3.046,186,2.355,188,1.997,266,1.747,275,2.361,293,1.467,336,1.276,430,3.444,432,3.444,433,3.267,438,2.355,440,3.267,449,2.314,451,2.355,453,2.083,455,2.355,456,1.88,472,1.88,473,2.355,484,2.355,485,4.048,486,4.048,487,2.768,488,3.576,489,2.768,490,4.048,491,4.048,492,2.768,493,2.768,494,4.048,495,2.768,496,1.276,497,1.88,498,4.048,499,3.444,500,2.768,501,2.768,502,2.768,503,2.768,504,4.786,505,2.768,506,2.768,507,2.768,508,4.048,509,4.048,510,2.768,511,4.048,512,2.768,513,2.768,514,4.048,515,2.768,516,2.768,517,2.355,518,2.768,519,2.768,520,2.355,521,4.048,522,2.768,523,2.768,524,2.768,525,2.768,526,1.88,527,2.768,528,2.768,529,1.365,530,2.355]],["title/interfaces/Movie.html",[531,1.605,532,1.605]],["body/interfaces/Movie.html",[3,0.182,4,0.182,5,0.156,7,0.294,11,0.023,15,1.051,16,0.182,20,0.182,24,0.015,25,0.015,49,0.632,50,1.561,95,2.094,207,1.272,208,2.226,209,2.226,210,2.368,211,2.226,212,2.391,229,3.628,230,3.343,231,3.628,256,2.391,306,2.966,496,1.613,531,2.202,532,2.202,533,2.172,534,2.634,535,3.696,536,4.4,537,2.885,538,4.4,539,3.971,540,2.172,541,2.377,542,2.377]],["title/controllers/MovieController.html",[0,1.605,543,2.366]],["body/controllers/MovieController.html",[0,0.832,2,0.78,3,0.094,4,0.094,5,0.08,7,0.152,8,0.926,10,1.464,11,0.023,12,0.725,14,1.647,15,0.934,16,0.29,17,0.401,20,0.094,21,0.054,22,1.651,24,0.009,25,0.009,26,0.541,47,1.748,48,1.299,49,0.552,50,1.152,68,0.957,95,1.765,101,2.824,110,3.456,111,2.402,117,2.486,119,0.832,120,0.78,124,1.227,127,1.227,128,0.732,129,1.995,131,2.237,137,1.437,138,1.044,158,1.033,178,1.359,179,1.359,181,1.227,188,2.821,221,0.51,227,3.347,236,1.979,247,2.635,250,3.058,266,1.258,367,1.979,429,1.359,444,3.162,445,1.359,446,2.756,447,1.359,448,3.469,452,1.227,453,1.359,460,2.756,529,1.437,532,1.936,543,1.979,544,1.537,545,1.359,546,3.116,547,2.914,548,2.479,549,2.479,550,3.922,551,3.662,552,4.589,553,1.807,554,1.807,555,1.807,556,1.807,557,3.116,558,1.807,559,1.807,560,1.807,561,2.487,562,1.537,563,1.807,564,4.17,565,1.807,566,1.807,567,1.807,568,2.272,569,3.575,570,1.537,571,2.607,572,2.756,573,1.807,574,3.116,575,1.807,576,3.13,577,1.807,578,1.807,579,2.272,580,1.807,581,1.807,582,3.548,583,1.807,584,1.807,585,1.807,586,1.807,587,1.807,588,1.537,589,1.807,590,1.537,591,1.537,592,1.359,593,3.575,594,1.537,595,2.094,596,1.537,597,3.575,598,4.411,599,2.479,600,2.914,601,1.121,602,1.537,603,1.807,604,2.479,605,1.359,606,1.537,607,1.359,608,1.807,609,1.807,610,1.807,611,1.537,612,1.537,613,1.537,614,1.537,615,1.807,616,1.537,617,1.807,618,2.479,619,2.479,620,2.479,621,1.807,622,1.807,623,3.162,624,3.662,625,1.807,626,1.807,627,1.537,628,1.807,629,1.807,630,1.807,631,1.807,632,1.807,633,1.807,634,2.914,635,1.807,636,1.807,637,1.807]],["title/modules/MovieModule.html",[26,1.043,35,2.162]],["body/modules/MovieModule.html",[2,2.278,3,0.211,4,0.211,5,0.181,11,0.023,16,0.349,17,0.903,20,0.211,21,0.12,24,0.017,25,0.017,26,1.581,28,1.754,29,2.278,35,4.222,36,3.769,38,2.604,39,2.005,40,2.005,42,3.018,48,0.903,56,2.522,57,1.754,84,2.797,145,2.324,476,2.76,478,2.76,543,3.982,595,3.769,596,3.458,638,3.458,639,4.065,640,3.458,641,4.065,642,2.76,643,3.458,644,3.973,645,4.065,646,4.065,647,4.065,648,4.065]],["title/injectables/MovieService.html",[92,0.984,595,1.992]],["body/injectables/MovieService.html",[3,0.097,4,0.097,5,0.083,7,0.157,8,0.951,11,0.023,12,0.764,14,1.67,15,0.942,16,0.293,17,0.415,20,0.097,21,0.055,22,1.534,24,0.01,25,0.01,47,1.842,48,1.214,49,0.506,50,1.214,57,0.806,92,0.845,93,0.861,101,2.84,103,1.213,111,1.712,117,2.853,119,0.861,120,0.806,128,1.213,129,2.268,131,2.704,137,0.922,138,0.669,175,2.033,188,2.912,193,3.569,227,3.104,230,1.712,247,2.449,256,1.792,265,2.324,336,1.38,452,1.269,488,2.91,496,0.861,497,1.269,526,2.91,529,2.114,532,1.38,537,0.922,540,2.658,541,2.033,542,2.544,545,1.406,546,3.187,548,2.547,549,2.547,550,2.547,552,3.645,557,3.187,562,2.547,564,1.269,568,1.159,571,2.324,579,1.159,582,2.658,595,1.712,601,1.159,602,1.59,604,1.59,605,1.406,606,1.59,607,1.406,623,4.349,642,1.269,643,1.59,649,1.59,650,3.187,651,2.994,652,1.868,653,3.004,654,1.868,655,2.994,656,1.868,657,1.868,658,1.868,659,1.868,660,1.868,661,2.994,662,1.868,663,2.994,664,1.868,665,1.868,666,1.59,667,1.868,668,2.994,669,1.868,670,1.868,671,1.868,672,1.868,673,2.994,674,1.406,675,1.406,676,2.253,677,1.406,678,1.868,679,1.868,680,1.868,681,1.868,682,1.868,683,2.547,684,1.868,685,1.868,686,1.868,687,1.868,688,1.868,689,1.868,690,1.868,691,1.868,692,1.868,693,1.868,694,2.994,695,1.868,696,2.994,697,2.994,698,2.994,699,2.994,700,3.746,701,4.689,702,2.994,703,3.746,704,2.994,705,1.868,706,1.868,707,1.868,708,1.868,709,1.868,710,2.994,711,1.868]],["title/classes/PatchUserDto.html",[21,0.103,712,2.162]],["body/classes/PatchUserDto.html",[3,0.213,4,0.213,5,0.183,7,0.345,10,1.663,11,0.023,12,0.871,15,1.011,16,0.276,20,0.213,21,0.157,24,0.017,25,0.017,49,0.577,50,1.18,204,1.228,207,1.413,211,2.021,221,1.158,222,2.242,223,2.523,224,3.073,226,1.383,269,3.12,273,3.12,294,2.785,712,3.295,713,5.489,714,4.432,715,4.101,716,4.101,717,4.101,718,4.101,719,4.101,720,4.101,721,4.101,722,6.229,723,5.311,724,4.101]],["title/classes/RegisterUserDto.html",[21,0.103,440,2.162]],["body/classes/RegisterUserDto.html",[3,0.191,4,0.191,5,0.164,7,0.309,10,1.81,11,0.023,12,0.897,15,1.001,16,0.257,20,0.191,21,0.147,24,0.016,25,0.016,49,0.594,171,2.278,204,1.102,207,1.316,212,1.771,217,2.499,220,2.494,221,1.039,222,2.37,223,2.597,224,3.072,225,2.826,226,1.241,233,3.464,239,1.815,269,2.958,272,3.192,273,2.958,274,3.192,275,2.754,283,2.769,292,3.721,294,2.499,295,3.192,297,3.131,299,3.131,301,3.131,302,3.131,303,3.131,304,3.131,440,3.068,725,4.93]],["title/classes/RegisterUserResponseDto.html",[21,0.103,726,2.622]],["body/classes/RegisterUserResponseDto.html",[3,0.168,4,0.168,5,0.144,7,0.272,10,1.877,11,0.023,12,0.93,15,1.019,16,0.235,20,0.168,21,0.134,24,0.014,25,0.014,49,0.616,115,2.984,171,2.085,204,0.969,207,1.204,208,1.987,209,1.987,210,2.114,211,1.987,212,2.208,220,2.688,221,0.913,222,1.723,224,2.232,226,1.091,266,2.9,267,2.007,269,2.766,272,2.984,273,2.766,274,2.984,275,2.575,279,2.434,291,2.752,725,5.056,726,3.405,727,3.235,728,3.235,729,3.235,730,3.235,731,3.235,732,3.235,733,3.235,734,3.235,735,3.235]],["title/interfaces/Review.html",[531,1.605,537,1.718]],["body/interfaces/Review.html",[3,0.211,4,0.211,5,0.181,7,0.342,11,0.023,15,1.057,16,0.211,20,0.211,24,0.017,25,0.017,49,0.622,50,1.512,95,2.223,207,1.405,208,2.363,209,2.363,210,2.514,211,2.363,212,2.361,250,3.851,251,4.671,256,2.1,306,3.276,496,1.873,531,1.873,533,2.522,535,3.982,537,2.604,736,3.458]],["title/interfaces/ReviewDetails.html",[531,1.605,539,2.366]],["body/interfaces/ReviewDetails.html",[3,0.225,4,0.225,5,0.192,7,0.363,11,0.023,15,0.986,16,0.225,20,0.225,24,0.018,25,0.018,49,0.559,95,1.548,207,1.462,208,1.645,209,1.645,210,1.751,211,1.645,212,2.162,229,2.682,230,2.471,231,2.682,256,2.527,306,2.682,496,1.992,531,2.531,532,1.992,533,2.682,534,3.253,535,3.73,536,3.253,537,2.132,538,3.253,539,4.1,540,3.941,541,4.314,542,4.314]],["title/modules/ReviewModule.html",[26,1.043,36,1.992]],["body/modules/ReviewModule.html",[2,1.825,3,0.22,4,0.22,5,0.188,11,0.023,16,0.339,17,0.94,20,0.22,21,0.125,24,0.017,25,0.017,26,1.622,28,1.825,29,2.337,36,3.873,38,2.672,39,2.086,40,2.086,42,2.417,48,0.94,56,2.624,57,1.825,84,2.87,145,3.096,476,2.872,478,2.872,653,4.042,737,3.598,738,3.598,739,3.598,740,4.229,741,4.229,742,2.872,743,3.598,744,4.076,745,4.229,746,4.229]],["title/injectables/ReviewService.html",[92,0.984,653,1.992]],["body/injectables/ReviewService.html",[3,0.16,4,0.16,5,0.137,7,0.258,8,1.387,11,0.023,12,0.773,14,1.613,16,0.315,17,0.683,20,0.16,21,0.091,22,1.564,24,0.014,25,0.014,47,1.864,48,1.228,49,0.47,50,1.228,57,1.327,92,1.233,93,1.417,101,2.799,103,1.768,117,2.795,119,2.012,120,1.327,128,1.245,129,1.98,131,2.519,137,1.516,138,1.101,175,2.088,188,2.88,209,2.104,247,3.467,250,2.709,256,2.172,336,1.417,488,3.754,496,1.417,497,2.088,517,2.615,520,2.615,526,2.088,537,1.516,568,1.907,571,3.15,601,1.907,607,2.313,623,3.821,650,4.32,653,2.496,674,2.313,675,2.313,676,2.313,677,2.313,683,3.715,742,2.088,743,2.615,747,2.615,748,4.366,749,4.366,750,3.074,751,3.074,752,4.366,753,3.074,754,3.074,755,4.366,756,3.074,757,4.366,758,3.074,759,3.074,760,3.074,761,3.074,762,3.074,763,4.366,764,3.074,765,3.074,766,3.074,767,3.074,768,3.074,769,3.074]],["title/classes/SearchMovieRequestDto.html",[21,0.103,576,2.366]],["body/classes/SearchMovieRequestDto.html",[3,0.201,4,0.201,5,0.172,7,0.324,10,1.786,11,0.023,12,0.885,15,0.977,16,0.265,20,0.201,21,0.151,24,0.016,25,0.016,49,0.586,204,1.155,207,1.358,220,2.474,221,1.089,222,2.315,223,2.562,226,1.301,236,2.62,237,2.903,239,1.903,256,2.178,257,4.341,261,4.302,480,2.903,481,3.282,482,3.282,532,2.995,576,3.465,677,2.903,770,4.891,771,5.716,772,5.716,773,5.716,774,3.858,775,3.858,776,3.858,777,3.858,778,3.858,779,3.282]],["title/classes/SearchMovieResponseDto.html",[21,0.103,579,2.162]],["body/classes/SearchMovieResponseDto.html",[3,0.232,4,0.232,5,0.199,7,0.375,10,1.583,11,0.023,12,0.784,16,0.319,20,0.232,21,0.166,24,0.018,25,0.018,49,0.519,204,1.337,207,1.492,220,2.52,221,1.26,222,1.699,223,1.808,226,1.506,256,2.008,261,3.359,267,2.77,532,3.114,540,3.802,545,4.611,579,3.478,605,3.359,770,4.611,780,4.464,781,4.464]],["title/classes/UpdateMovieDto.html",[21,0.103,582,2.162]],["body/classes/UpdateMovieDto.html",[3,0.176,4,0.176,5,0.151,7,0.285,10,1.628,11,0.023,12,0.927,15,1.027,16,0.243,20,0.176,21,0.139,24,0.015,25,0.015,48,0.753,49,0.614,50,1.451,95,1.916,193,3.633,204,1.015,207,1.243,208,2.036,209,2.036,210,2.167,211,2.036,212,2.24,220,2.303,221,0.956,222,2.195,223,2.45,224,2.305,225,2.671,226,1.143,229,3.754,230,3.058,231,3.319,233,2.102,235,2.882,236,3.173,237,2.549,239,1.671,241,2.882,245,2.882,246,2.882,582,2.899,782,5.709,783,2.882,784,3.388,785,3.388,786,3.388,787,3.388,788,3.388,789,3.388,790,3.388,791,3.388,792,3.388]],["title/interfaces/User.html",[266,1.503,531,1.605]],["body/interfaces/User.html",[3,0.189,4,0.189,5,0.162,7,0.305,11,0.023,15,1.077,16,0.189,20,0.189,24,0.016,25,0.016,49,0.636,50,1.536,171,2.555,207,1.304,208,2.26,209,2.26,210,2.404,211,2.26,212,2.41,266,2.115,269,3.146,272,3.394,273,3.146,274,3.394,275,2.929,295,3.394,306,3.04,496,1.673,531,1.673,533,2.253,535,3.766,714,4.468,793,3.09]],["title/controllers/UserController.html",[0,1.605,794,2.366]],["body/controllers/UserController.html",[0,1.125,2,1.053,3,0.127,4,0.127,5,0.109,7,0.205,8,1.172,10,1.398,11,0.023,12,0.692,14,1.573,15,0.84,16,0.311,17,0.542,20,0.127,21,0.072,22,1.773,24,0.012,25,0.012,26,0.731,47,1.669,48,1.289,49,0.412,50,1.1,68,1.293,95,1.32,101,2.769,103,0.988,105,2.191,110,2.287,117,2.281,119,1.125,120,1.053,124,1.658,128,1.493,129,2.001,131,2.136,137,1.819,138,1.32,158,1.395,178,1.837,179,1.837,181,1.658,188,2.947,221,0.689,263,1.658,265,1.514,266,2.136,293,1.293,336,1.699,367,1.658,429,1.837,444,2.774,445,1.837,446,1.837,447,1.837,448,2.774,452,1.658,454,2.077,456,2.504,460,1.837,529,2.442,561,2.504,564,4.407,568,2.756,569,4.212,570,2.077,571,3.071,572,1.837,574,3.78,590,2.077,591,2.077,592,1.837,593,2.077,594,2.077,597,3.78,598,3.137,599,3.137,601,2.287,611,2.077,612,2.077,613,2.077,614,2.077,616,2.077,618,3.137,619,3.137,620,3.137,627,2.077,712,3.794,794,2.504,795,2.077,796,2.441,797,3.687,798,3.687,799,3.137,800,4.443,801,2.441,802,2.441,803,2.441,804,2.441,805,2.441,806,2.441,807,2.077,808,2.441,809,2.441,810,2.441,811,2.441,812,2.441,813,2.441,814,2.54,815,2.077,816,2.077,817,2.077,818,2.441,819,2.441,820,2.441,821,2.441,822,2.441,823,2.441,824,2.441,825,2.441,826,2.441,827,2.441,828,2.441,829,2.441,830,2.441]],["title/modules/UserModule.html",[26,1.043,37,2.162]],["body/modules/UserModule.html",[2,2.239,3,0.206,4,0.206,5,0.176,11,0.023,16,0.347,17,0.88,20,0.206,21,0.117,24,0.017,25,0.017,26,1.554,28,1.708,29,2.239,32,3.469,37,4.247,38,2.56,39,1.953,40,1.953,42,2.966,48,0.88,56,2.456,57,1.708,61,2.979,84,2.75,145,2.966,474,3.524,476,2.688,478,2.688,794,3.931,814,4.004,815,3.368,831,3.368,832,3.368,833,3.368,834,3.958,835,3.958,836,3.958,837,3.958,838,2.688,839,3.368,840,3.958]],["title/injectables/UserService.html",[92,0.984,814,1.992]],["body/injectables/UserService.html",[3,0.161,4,0.161,5,0.138,7,0.261,8,1.396,11,0.023,12,0.776,14,1.622,15,0.914,16,0.325,17,0.689,20,0.161,21,0.092,22,1.574,24,0.014,25,0.014,47,1.872,48,1.233,49,0.514,50,1.233,57,1.339,92,1.241,93,1.429,101,2.805,103,1.78,117,2.025,119,1.429,120,1.339,128,1.256,129,1.827,131,2.395,175,2.107,188,2.89,193,3.465,208,1.181,256,2.179,265,2.726,266,1.339,293,1.644,295,2.512,336,1.429,456,2.984,488,3.769,496,1.429,497,2.107,526,2.107,529,2.168,561,2.984,564,2.107,568,1.925,571,3.166,601,1.925,666,3.739,674,2.334,675,2.334,676,2.334,712,3.965,779,2.639,799,3.739,807,3.739,814,2.512,816,2.639,817,2.639,838,2.107,839,2.639,841,2.639,842,4.394,843,3.102,844,3.102,845,4.394,846,3.102,847,4.394,848,3.102,849,3.102,850,3.102,851,3.102,852,3.102,853,3.102,854,3.102]],["title/injectables/ValidationPipe.html",[68,1.846,92,0.984]],["body/injectables/ValidationPipe.html",[3,0.182,4,0.182,5,0.156,7,0.295,8,1.522,11,0.023,12,0.67,14,1.522,15,0.527,16,0.283,17,0.78,20,0.182,21,0.162,22,1.952,24,0.015,25,0.015,47,1.615,48,1.064,49,0.444,50,1.064,68,2.537,92,1.352,93,1.617,98,2.641,101,2.352,123,2.641,129,2.265,131,1.515,137,1.731,138,1.257,171,2.511,184,4.405,226,1.184,256,1.257,329,3.603,336,2.511,529,1.731,561,2.383,588,2.986,592,2.641,855,2.986,856,4.788,857,4.788,858,4.788,859,3.51,860,5.45,861,4.788,862,5.854,863,3.51,864,4.981,865,4.788,866,3.51,867,3.51,868,2.986,869,3.51,870,3.51,871,3.51,872,3.51,873,3.51,874,3.51,875,3.51,876,3.51,877,4.788,878,3.51,879,3.51,880,3.51,881,3.51,882,3.51,883,3.51]],["title/coverage.html",[884,3.585]],["body/coverage.html",[0,2.39,1,1.821,5,0.119,6,2.281,11,0.023,18,1.421,21,0.199,24,0.013,25,0.013,49,0.248,59,1.821,63,1.821,68,1.421,92,1.734,94,2.281,105,1.322,138,0.96,154,2.281,184,2.017,203,2.017,205,2.281,206,2.976,227,1.663,228,2.281,247,1.533,248,2.281,249,2.281,263,1.821,264,2.976,265,1.663,266,2.027,267,3.217,293,1.421,294,3.19,305,2.281,334,1.663,335,2.281,394,2.281,427,1.821,428,2.281,433,1.663,436,1.821,440,1.663,449,1.533,472,1.821,474,1.821,479,2.976,480,2.976,484,2.281,529,3.546,531,2.39,532,2.165,534,2.976,537,1.322,539,1.821,543,1.821,544,2.281,576,1.821,579,1.663,582,1.663,595,1.533,642,1.821,644,2.017,649,2.281,653,1.533,712,1.663,713,2.281,725,2.976,726,2.017,736,2.281,742,1.821,744,2.017,747,2.281,770,2.976,782,2.281,783,2.281,793,2.281,794,1.821,795,2.281,814,1.533,838,1.821,841,2.281,855,2.281,884,2.017,885,2.681,886,2.681,887,2.681,888,3.954,889,5.53,890,5.984,891,3.954,892,2.681,893,2.681,894,2.681,895,2.681,896,2.281,897,2.281,898,6.271,899,2.681,900,2.281,901,6.142,902,3.954,903,2.681,904,3.954,905,3.954,906,2.681,907,2.281,908,4.698,909,2.281,910,2.281,911,2.281,912,2.681,913,2.281,914,2.281,915,2.281,916,2.281,917,2.681,918,2.681]],["title/dependencies.html",[29,1.809,919,2.905]],["body/dependencies.html",[11,0.023,17,0.951,21,0.162,24,0.017,25,0.017,29,1.848,55,3.643,57,1.848,67,3.222,121,4.108,147,3.222,221,1.209,226,1.444,356,3.643,405,3.643,496,1.973,499,3.643,868,3.643,920,4.282,921,4.282,922,6.33,923,4.282,924,4.282,925,4.282,926,4.282,927,4.282,928,4.282,929,4.282,930,4.282,931,6.011,932,4.282,933,4.282,934,4.282,935,4.282,936,4.282,937,3.643,938,4.282,939,4.282,940,4.282,941,4.282,942,4.282,943,4.282,944,4.282,945,4.282,946,4.282,947,4.282,948,4.282,949,4.282,950,4.282,951,4.282,952,4.282]],["title/miscellaneous/functions.html",[953,1.973,954,3.567]],["body/miscellaneous/functions.html",[7,0.459,11,0.02,24,0.02,25,0.02,896,4.652,897,5.691,953,3.713,954,4.652,955,5.468]],["title/index.html",[7,0.244,956,2.905,957,2.905]],["body/index.html",[11,0.023,24,0.018,25,0.018,95,1.664,181,3.156,424,4.89,425,3.954,884,3.497,937,5.885,958,4.647,959,4.647,960,4.647,961,4.647,962,4.647,963,4.647,964,4.647,965,4.647,966,6.825,967,4.647,968,4.647,969,5.748,970,4.647,971,4.647,972,4.647,973,5.748,974,4.647,975,4.647,976,4.647]],["title/modules.html",[28,2.056]],["body/modules.html",[11,0.019,24,0.019,25,0.019,27,3.338,28,2.121,32,2.604,33,3.05,34,3.05,35,3.05,36,2.81,37,3.05,977,6.999,978,6.999,979,6.999,980,6.999]],["title/overview.html",[981,4.053]],["body/overview.html",[2,1.473,11,0.023,18,3.066,24,0.015,25,0.015,27,4.708,28,1.473,29,2.027,30,2.904,31,2.904,32,3.467,33,3.986,34,4.06,35,3.986,36,3.672,37,4.06,38,2.317,39,1.684,40,1.684,93,1.573,105,3.169,141,2.904,142,2.904,143,2.904,204,1.022,334,3.986,389,2.904,390,2.904,391,2.904,449,3.672,466,2.904,468,2.904,469,2.904,533,2.118,595,3.07,638,2.904,640,2.904,653,3.672,737,2.904,738,2.904,739,2.904,814,3.672,831,2.904,832,2.904,833,2.904,981,2.904,982,3.413,983,4.697,984,3.413,985,3.413]],["title/miscellaneous/variables.html",[953,1.973,986,3.567]],["body/miscellaneous/variables.html",[7,0.197,11,0.024,15,0.994,24,0.011,25,0.011,48,0.521,49,0.657,77,4.37,95,1.281,138,1.552,171,1.08,208,1.65,209,1.65,210,1.755,211,1.65,212,2.113,229,1.454,230,1.34,231,1.454,250,1.454,251,1.764,256,1.97,266,1.543,269,1.242,272,1.34,273,1.242,274,1.34,275,1.156,295,1.34,329,3.649,472,2.428,474,2.428,529,2.714,530,3.688,532,1.08,536,1.764,537,1.764,538,1.764,540,1.454,541,1.592,542,1.592,572,2.691,642,2.428,644,2.691,714,1.764,742,2.428,744,2.691,838,2.428,864,5.019,900,1.994,907,1.994,909,1.994,910,1.994,911,1.994,913,1.994,914,1.994,915,1.994,916,3.042,953,1.592,986,1.994,987,2.344,988,2.344,989,2.344,990,2.344,991,2.344,992,2.344,993,2.344,994,2.344,995,2.344,996,6.813,997,2.344,998,2.344,999,2.344,1000,2.344,1001,2.344,1002,2.344,1003,6.167,1004,2.344,1005,3.576,1006,2.344,1007,4.334,1008,2.344,1009,5.722,1010,4.334,1011,4.334,1012,2.344,1013,2.344]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":529,"title":{},"body":{"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["0.1.13",{"_index":941,"title":{},"body":{"dependencies.html":{}}}],["0.12.2",{"_index":929,"title":{},"body":{"dependencies.html":{}}}],["0.13.0",{"_index":935,"title":{},"body":{"dependencies.html":{}}}],["0.2.3",{"_index":928,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":923,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":898,"title":{},"body":{"coverage.html":{}}}],["0/10",{"_index":904,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":899,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":905,"title":{},"body":{"coverage.html":{}}}],["0/14",{"_index":912,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":888,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":889,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":906,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":890,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":903,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":891,"title":{},"body":{"coverage.html":{}}}],["0/8",{"_index":908,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":902,"title":{},"body":{"coverage.html":{}}}],["0})@apiquery({name",{"_index":570,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["1",{"_index":701,"title":{},"body":{"injectables/MovieService.html":{}}}],["1.7.2",{"_index":951,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":572,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{},"miscellaneous/variables.html":{}}}],["100",{"_index":892,"title":{},"body":{"coverage.html":{}}}],["15",{"_index":985,"title":{},"body":{"overview.html":{}}}],["17.1.1",{"_index":921,"title":{},"body":{"dependencies.html":{}}}],["2.4.3",{"_index":927,"title":{},"body":{"dependencies.html":{}}}],["3.0.2",{"_index":943,"title":{},"body":{"dependencies.html":{}}}],["3.3.3",{"_index":952,"title":{},"body":{"dependencies.html":{}}}],["3/3",{"_index":893,"title":{},"body":{"coverage.html":{}}}],["3/5",{"_index":895,"title":{},"body":{"coverage.html":{}}}],["3600s",{"_index":153,"title":{},"body":{"modules/AuthModule.html":{}}}],["4",{"_index":983,"title":{},"body":{"overview.html":{}}}],["4.1.4",{"_index":947,"title":{},"body":{"dependencies.html":{}}}],["4.43.0",{"_index":948,"title":{},"body":{"dependencies.html":{}}}],["4.5.11",{"_index":926,"title":{},"body":{"dependencies.html":{}}}],["5.9.20",{"_index":936,"title":{},"body":{"dependencies.html":{}}}],["6.0.3",{"_index":933,"title":{},"body":{"dependencies.html":{}}}],["6.14.5",{"_index":938,"title":{},"body":{"dependencies.html":{}}}],["6.5.4",{"_index":944,"title":{},"body":{"dependencies.html":{}}}],["60",{"_index":894,"title":{},"body":{"coverage.html":{}}}],["7",{"_index":982,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":922,"title":{},"body":{"dependencies.html":{}}}],["7.0.1",{"_index":924,"title":{},"body":{"dependencies.html":{}}}],["8",{"_index":984,"title":{},"body":{"overview.html":{}}}],["_id",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MovieService.html":{},"classes/UpdateMovieDto.html":{},"injectables/UserService.html":{}}}],["action",{"_index":245,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/UpdateMovieDto.html":{}}}],["addreview",{"_index":546,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["addreview(_id",{"_index":656,"title":{},"body":{"injectables/MovieService.html":{}}}],["addreview(reviewdata",{"_index":553,"title":{},"body":{"controllers/MovieController.html":{}}}],["age",{"_index":999,"title":{},"body":{"miscellaneous/variables.html":{}}}],["already",{"_index":517,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ReviewService.html":{}}}],["api",{"_index":195,"title":{},"body":{"injectables/AuthService.html":{}}}],["apibearerauth",{"_index":598,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apibearerauth()@get('/')@apiquery({name",{"_index":567,"title":{},"body":{"controllers/MovieController.html":{}}}],["apibearerauth()@get('/:id')@apiparam({name",{"_index":563,"title":{},"body":{"controllers/MovieController.html":{}}}],["apibearerauth()@post('/')@apibody({type",{"_index":559,"title":{},"body":{"controllers/MovieController.html":{}}}],["apibearerauth()@put('/:id')@usepipes(validationpipe)@apibody({type",{"_index":583,"title":{},"body":{"controllers/MovieController.html":{}}}],["apibody",{"_index":448,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apiokresponse",{"_index":600,"title":{},"body":{"controllers/MovieController.html":{}}}],["apiparam",{"_index":599,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apiproperty",{"_index":220,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{}}}],["apiproperty()@isboolean()@isnotempty",{"_index":283,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["apiproperty()@isdatestring()@isnotempty",{"_index":241,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/UpdateMovieDto.html":{}}}],["apiproperty()@isnotempty()@isdatestring",{"_index":276,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["apiproperty()@isnotempty()@isdatestring()@isoptional",{"_index":213,"title":{},"body":{"classes/CommonMovieDataDto.html":{}}}],["apiproperty()@isnumber()@isnotempty",{"_index":257,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/SearchMovieRequestDto.html":{}}}],["apiproperty()@isoptional()@isdatestring",{"_index":217,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["apiproperty()@isoptional()@isstring",{"_index":279,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserResponseDto.html":{}}}],["apiproperty()@isstring",{"_index":774,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["apiproperty()@isstring()@isnotempty",{"_index":239,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RegisterUserDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/UpdateMovieDto.html":{}}}],["apiproperty()@isstring()@isnotempty()@isoptional",{"_index":215,"title":{},"body":{"classes/CommonMovieDataDto.html":{}}}],["apiproperty()@isstring()@isoptional()@isnotempty",{"_index":233,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMovieDto.html":{}}}],["apiproperty({enum",{"_index":776,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["apiproperty({name",{"_index":235,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/UpdateMovieDto.html":{}}}],["apipropertyoptional",{"_index":722,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apipropertyoptional()@isarray()@isnotempty()@isoptional",{"_index":715,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apipropertyoptional()@isstring()@isnotempty()@isoptional",{"_index":717,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apipropertyoptional()@isstring()@isoptional()@isnotempty",{"_index":719,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["apiquery",{"_index":597,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apiresponse",{"_index":446,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apitags",{"_index":447,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["apitags(\"common",{"_index":458,"title":{},"body":{"controllers/LoginController.html":{}}}],["apitags(\"movies",{"_index":609,"title":{},"body":{"controllers/MovieController.html":{}}}],["apitags(\"users",{"_index":819,"title":{},"body":{"controllers/UserController.html":{}}}],["app",{"_index":964,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":58,"title":{},"body":{"modules/AppModule.html":{}}}],["app_pipe",{"_index":66,"title":{},"body":{"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["apply(authmiddleware",{"_index":87,"title":{},"body":{"modules/AppModule.html":{}}}],["appmodule",{"_index":27,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["argumentmetadata",{"_index":862,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["argumentshost",{"_index":311,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["array",{"_index":882,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["asc",{"_index":677,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{}}}],["async",{"_index":101,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["auth",{"_index":96,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["auth.service",{"_index":122,"title":{},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{}}}],["authdata",{"_index":623,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{}}}],["authdata._id",{"_index":683,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{}}}],["authmiddleware",{"_index":59,"title":{"injectables/AuthMiddleware.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["authmodule",{"_index":32,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["authorization",{"_index":100,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["authservice",{"_index":105,"title":{"injectables/AuthService.html":{}},"body":{"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/LoginController.html":{},"controllers/UserController.html":{},"coverage.html":{},"overview.html":{}}}],["average",{"_index":541,"title":{},"body":{"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/ReviewDetails.html":{},"miscellaneous/variables.html":{}}}],["await",{"_index":131,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["badrequestexception",{"_index":866,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["badrequestexception(validationmsg",{"_index":881,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["baseexceptionfilter",{"_index":307,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["bcryptjs",{"_index":499,"title":{},"body":{"injectables/LoginService.html":{},"dependencies.html":{}}}],["body",{"_index":444,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["boolean",{"_index":171,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoggerService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["bootstrap",{"_index":897,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["boundary",{"_index":591,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["browse",{"_index":980,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":977,"title":{},"body":{"modules.html":{}}}],["callhandler",{"_index":350,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["catch",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{}}}],["catch(exception",{"_index":309,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["catcherror",{"_index":357,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["catcherror(err",{"_index":375,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["check",{"_index":156,"title":{},"body":{"injectables/AuthService.html":{}}}],["checkusernameexists",{"_index":485,"title":{},"body":{"injectables/LoginService.html":{}}}],["checkusernameexists(username",{"_index":491,"title":{},"body":{"injectables/LoginService.html":{}}}],["class",{"_index":21,"title":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoggerService.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":204,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoggerService.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":30,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":31,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":141,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":143,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":142,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_loggermodule",{"_index":389,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_exports",{"_index":390,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loggermodule_providers",{"_index":391,"title":{},"body":{"modules/LoggerModule.html":{},"overview.html":{}}}],["cluster_loginmodule",{"_index":466,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_exports",{"_index":468,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_loginmodule_imports",{"_index":467,"title":{},"body":{"modules/LoginModule.html":{}}}],["cluster_loginmodule_providers",{"_index":469,"title":{},"body":{"modules/LoginModule.html":{},"overview.html":{}}}],["cluster_moviemodule",{"_index":638,"title":{},"body":{"modules/MovieModule.html":{},"overview.html":{}}}],["cluster_moviemodule_imports",{"_index":639,"title":{},"body":{"modules/MovieModule.html":{}}}],["cluster_moviemodule_providers",{"_index":640,"title":{},"body":{"modules/MovieModule.html":{},"overview.html":{}}}],["cluster_reviewmodule",{"_index":737,"title":{},"body":{"modules/ReviewModule.html":{},"overview.html":{}}}],["cluster_reviewmodule_exports",{"_index":738,"title":{},"body":{"modules/ReviewModule.html":{},"overview.html":{}}}],["cluster_reviewmodule_providers",{"_index":739,"title":{},"body":{"modules/ReviewModule.html":{},"overview.html":{}}}],["cluster_usermodule",{"_index":831,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_exports",{"_index":832,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["cluster_usermodule_imports",{"_index":834,"title":{},"body":{"modules/UserModule.html":{}}}],["cluster_usermodule_providers",{"_index":833,"title":{},"body":{"modules/UserModule.html":{},"overview.html":{}}}],["comedy",{"_index":246,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/UpdateMovieDto.html":{}}}],["common",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"controllers/LoginController.html":{}}}],["common/filters/exception.filters",{"_index":64,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logger/logger.module",{"_index":62,"title":{},"body":{"modules/AppModule.html":{}}}],["common/interceptors/logger/logger.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{}}}],["common/middlewares/auth/auth.middleware",{"_index":60,"title":{},"body":{"modules/AppModule.html":{}}}],["common/middlewares/auth/auth.module",{"_index":61,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/UserModule.html":{}}}],["common/middlewares/auth/auth.service",{"_index":454,"title":{},"body":{"controllers/LoginController.html":{},"controllers/UserController.html":{}}}],["common/pipes/validation.pipe",{"_index":69,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmoviedatadto",{"_index":203,"title":{"classes/CommonMovieDataDto.html":{}},"body":{"classes/CommonMovieDataDto.html":{},"coverage.html":{}}}],["compare",{"_index":498,"title":{},"body":{"injectables/LoginService.html":{}}}],["config",{"_index":125,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["configmodule",{"_index":54,"title":{},"body":{"modules/AppModule.html":{}}}],["configmodule.forroot",{"_index":73,"title":{},"body":{"modules/AppModule.html":{}}}],["configure",{"_index":43,"title":{},"body":{"modules/AppModule.html":{}}}],["configure(consumer",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(request.user",{"_index":824,"title":{},"body":{"controllers/UserController.html":{}}}],["console.log(reviewinfo",{"_index":711,"title":{},"body":{"injectables/MovieService.html":{}}}],["const",{"_index":129,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["constructor",{"_index":103,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["constructor(authservice",{"_index":104,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["constructor(jwtservice",{"_index":160,"title":{},"body":{"injectables/AuthService.html":{}}}],["constructor(logger",{"_index":340,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["constructor(loginmodel",{"_index":487,"title":{},"body":{"injectables/LoginService.html":{}}}],["constructor(moviemodel",{"_index":652,"title":{},"body":{"injectables/MovieService.html":{}}}],["constructor(private",{"_index":127,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"controllers/MovieController.html":{}}}],["constructor(reviewmodel",{"_index":750,"title":{},"body":{"injectables/ReviewService.html":{}}}],["constructor(usermodel",{"_index":843,"title":{},"body":{"injectables/UserService.html":{}}}],["consumer",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["context",{"_index":352,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["context.switchtohttp().getrequest",{"_index":362,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}},"body":{"controllers/AppController.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["controller(\"common",{"_index":457,"title":{},"body":{"controllers/LoginController.html":{}}}],["controller(\"movies",{"_index":608,"title":{},"body":{"controllers/MovieController.html":{}}}],["controller(\"users",{"_index":818,"title":{},"body":{"controllers/UserController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["copy",{"_index":930,"title":{},"body":{"dependencies.html":{}}}],["count",{"_index":694,"title":{},"body":{"injectables/MovieService.html":{}}}],["coverage",{"_index":884,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":650,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{}}}],["create(createmoviedto",{"_index":658,"title":{},"body":{"injectables/MovieService.html":{}}}],["create(createreviewdto",{"_index":753,"title":{},"body":{"injectables/ReviewService.html":{}}}],["createauthtoken",{"_index":157,"title":{},"body":{"injectables/AuthService.html":{}}}],["createauthtoken(payload",{"_index":163,"title":{},"body":{"injectables/AuthService.html":{}}}],["createdat",{"_index":208,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"interfaces/Movie.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["createdby",{"_index":209,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"interfaces/Movie.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["createmoviedto",{"_index":227,"title":{"classes/CreateMovieDto.html":{}},"body":{"classes/CreateMovieDto.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"coverage.html":{}}}],["createmoviedto.createdby",{"_index":682,"title":{},"body":{"injectables/MovieService.html":{}}}],["createreviewdto",{"_index":247,"title":{"classes/CreateReviewDto.html":{}},"body":{"classes/CreateReviewDto.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"coverage.html":{}}}],["createreviewdto.createdby",{"_index":767,"title":{},"body":{"injectables/ReviewService.html":{}}}],["createreviewdto.movieid",{"_index":765,"title":{},"body":{"injectables/ReviewService.html":{}}}],["createreviewdto})@apibearerauth",{"_index":555,"title":{},"body":{"controllers/MovieController.html":{}}}],["creates",{"_index":107,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["createupdateuserresponsedto",{"_index":263,"title":{"classes/CreateUpdateUserResponseDto.html":{}},"body":{"classes/CreateUpdateUserResponseDto.html":{},"controllers/UserController.html":{},"coverage.html":{}}}],["createuser",{"_index":547,"title":{},"body":{"controllers/MovieController.html":{}}}],["createuser(@body",{"_index":622,"title":{},"body":{"controllers/MovieController.html":{}}}],["createuser(createmoviedto",{"_index":558,"title":{},"body":{"controllers/MovieController.html":{}}}],["createuserdto",{"_index":293,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["createuserdto.password",{"_index":523,"title":{},"body":{"injectables/LoginService.html":{}}}],["createuserdto.username",{"_index":516,"title":{},"body":{"injectables/LoginService.html":{}}}],["createuserschema",{"_index":916,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["credentials",{"_index":508,"title":{},"body":{"injectables/LoginService.html":{}}}],["ctx",{"_index":315,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getrequest",{"_index":318,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["ctx.getresponse",{"_index":317,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["data",{"_index":374,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["data.constraints",{"_index":876,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["date",{"_index":212,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"interfaces/Movie.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["date().getmilliseconds",{"_index":361,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["date().toisostring",{"_index":333,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["date.now",{"_index":1009,"title":{},"body":{"miscellaneous/variables.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"controllers/MovieController.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{}}}],["default",{"_index":996,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["delete",{"_index":513,"title":{},"body":{"injectables/LoginService.html":{}}}],["dependencies",{"_index":29,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"dependencies.html":{},"overview.html":{}}}],["desc",{"_index":779,"title":{},"body":{"classes/SearchMovieRequestDto.html":{},"injectables/UserService.html":{}}}],["description",{"_index":95,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"controllers/LoginController.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["designation",{"_index":268,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{}}}],["development",{"_index":965,"title":{},"body":{"index.html":{}}}],["disable",{"_index":179,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["docs",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{}}}],["document",{"_index":535,"title":{},"body":{"interfaces/Movie.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"interfaces/User.html":{}}}],["documentation",{"_index":885,"title":{},"body":{"coverage.html":{}}}],["downvotes",{"_index":536,"title":{},"body":{"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"miscellaneous/variables.html":{}}}],["dto/create",{"_index":601,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/login",{"_index":451,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["dto/patch",{"_index":816,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["dto/register",{"_index":455,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["dto/search",{"_index":604,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["dto/update",{"_index":603,"title":{},"body":{"controllers/MovieController.html":{}}}],["e2e",{"_index":974,"title":{},"body":{"index.html":{}}}],["empty",{"_index":183,"title":{},"body":{"injectables/AuthService.html":{}}}],["endpoints",{"_index":99,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["enum",{"_index":236,"title":{},"body":{"classes/CreateMovieDto.html":{},"controllers/MovieController.html":{},"classes/SearchMovieRequestDto.html":{},"classes/UpdateMovieDto.html":{}}}],["env",{"_index":75,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":74,"title":{},"body":{"modules/AppModule.html":{}}}],["err.status",{"_index":385,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["error",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["error(message",{"_index":399,"title":{},"body":{"classes/LoggerService.html":{}}}],["errors",{"_index":871,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.foreach(data",{"_index":875,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["errors.length",{"_index":873,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["eslint",{"_index":178,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["eslint/explicit",{"_index":590,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["eslint/no",{"_index":182,"title":{},"body":{"injectables/AuthService.html":{}}}],["example",{"_index":569,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["exception",{"_index":313,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.getstatus",{"_index":323,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message",{"_index":326,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exception.message.error",{"_index":327,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["exclude",{"_index":168,"title":{},"body":{"injectables/AuthService.html":{}}}],["executioncontext",{"_index":349,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["exitingreview",{"_index":763,"title":{},"body":{"injectables/ReviewService.html":{}}}],["expiresin",{"_index":152,"title":{},"body":{"modules/AuthModule.html":{}}}],["explicit",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["exports",{"_index":145,"title":{},"body":{"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["express",{"_index":121,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["extends",{"_index":306,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"interfaces/Movie.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"interfaces/User.html":{}}}],["externals",{"_index":950,"title":{},"body":{"dependencies.html":{}}}],["false",{"_index":530,"title":{},"body":{"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["favoritegenres",{"_index":714,"title":{},"body":{"classes/PatchUserDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["find",{"_index":175,"title":{},"body":{"injectables/AuthService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["find(exclude",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{}}}],["firstname",{"_index":269,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["fomat",{"_index":377,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["format",{"_index":406,"title":{},"body":{"classes/LoggerService.html":{}}}],["formats.en.html",{"_index":383,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["forroutes",{"_index":88,"title":{},"body":{"modules/AppModule.html":{}}}],["found",{"_index":680,"title":{},"body":{"injectables/MovieService.html":{}}}],["framework",{"_index":959,"title":{},"body":{"index.html":{}}}],["function",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["functions",{"_index":954,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gensalt",{"_index":501,"title":{},"body":{"injectables/LoginService.html":{}}}],["gensalt(loginconstants.salt_password_lenght",{"_index":522,"title":{},"body":{"injectables/LoginService.html":{}}}],["get(\"/:id",{"_index":616,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["get(\"/me",{"_index":822,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/')@apiquery({name",{"_index":802,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/:id')@apiparam({name",{"_index":808,"title":{},"body":{"controllers/UserController.html":{}}}],["get('/me",{"_index":805,"title":{},"body":{"controllers/UserController.html":{}}}],["getallusers",{"_index":797,"title":{},"body":{"controllers/UserController.html":{}}}],["getallusers(@query",{"_index":820,"title":{},"body":{"controllers/UserController.html":{}}}],["getallusers(query",{"_index":801,"title":{},"body":{"controllers/UserController.html":{}}}],["getmoviebyid",{"_index":548,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["getmoviebyid(@param(\"id",{"_index":617,"title":{},"body":{"controllers/MovieController.html":{}}}],["getmoviebyid(id",{"_index":562,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["getmovies",{"_index":549,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["getmovies(@query",{"_index":610,"title":{},"body":{"controllers/MovieController.html":{}}}],["getmovies(query",{"_index":566,"title":{},"body":{"controllers/MovieController.html":{}}}],["getmovies(skip",{"_index":661,"title":{},"body":{"injectables/MovieService.html":{}}}],["getreviewbyuserandmovieid",{"_index":748,"title":{},"body":{"injectables/ReviewService.html":{}}}],["getreviewbyuserandmovieid(movieid",{"_index":755,"title":{},"body":{"injectables/ReviewService.html":{}}}],["getreviews",{"_index":749,"title":{},"body":{"injectables/ReviewService.html":{}}}],["getreviews(skip",{"_index":757,"title":{},"body":{"injectables/ReviewService.html":{}}}],["getsessionuser",{"_index":798,"title":{},"body":{"controllers/UserController.html":{}}}],["getsessionuser(@req",{"_index":823,"title":{},"body":{"controllers/UserController.html":{}}}],["getsessionuser(request",{"_index":804,"title":{},"body":{"controllers/UserController.html":{}}}],["gettimedelta",{"_index":337,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["gettimedelta(starttime",{"_index":343,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["getting",{"_index":956,"title":{"index.html":{}},"body":{}}],["geturl",{"_index":338,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["geturl(request",{"_index":346,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["getuserbyid",{"_index":799,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getuserbyid(@param(\"id",{"_index":827,"title":{},"body":{"controllers/UserController.html":{}}}],["getuserbyid(id",{"_index":807,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["getusers",{"_index":842,"title":{},"body":{"injectables/UserService.html":{}}}],["getusers(skip",{"_index":847,"title":{},"body":{"injectables/UserService.html":{}}}],["globalexceptionfilter",{"_index":63,"title":{"classes/GlobalExceptionFilter.html":{}},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["guide/monitoring/logging/log",{"_index":382,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["h#ll0w0r!d",{"_index":150,"title":{},"body":{"modules/AuthModule.html":{}}}],["hapi/joi",{"_index":920,"title":{},"body":{"dependencies.html":{}}}],["hash",{"_index":500,"title":{},"body":{"injectables/LoginService.html":{}}}],["hash(createuserdto.password",{"_index":524,"title":{},"body":{"injectables/LoginService.html":{}}}],["host",{"_index":310,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["host.switchtohttp",{"_index":316,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpcode",{"_index":670,"title":{},"body":{"injectables/MovieService.html":{}}}],["httpexception",{"_index":119,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpexception(\"invalid",{"_index":139,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["httpexception(\"movie",{"_index":679,"title":{},"body":{"injectables/MovieService.html":{}}}],["httpexception(\"provide",{"_index":618,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["https://docs.trafficserver.apache.org/en/6.1.x/admin",{"_index":381,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["httpstatus",{"_index":120,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["httpstatus.bad_request",{"_index":620,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["httpstatus.conflict",{"_index":520,"title":{},"body":{"injectables/LoginService.html":{},"injectables/ReviewService.html":{}}}],["httpstatus.created",{"_index":368,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["httpstatus.internal_server_error",{"_index":320,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["httpstatus.not_found",{"_index":681,"title":{},"body":{"injectables/MovieService.html":{}}}],["httpstatus.ok",{"_index":369,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["httpstatus.unauthorized",{"_index":140,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoginService.html":{}}}],["httpstatus[status",{"_index":324,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["id",{"_index":564,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["identifier",{"_index":886,"title":{},"body":{"coverage.html":{}}}],["imageurl",{"_index":270,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{}}}],["implements",{"_index":123,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LogInterceptor.html":{},"injectables/ValidationPipe.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["imports",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["info(message",{"_index":401,"title":{},"body":{"classes/LoggerService.html":{}}}],["inject",{"_index":174,"title":{},"body":{"injectables/AuthService.html":{}}}],["injectable",{"_index":92,"title":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["injectables",{"_index":93,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"overview.html":{}}}],["injectmodel",{"_index":497,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["injectmodel(loginconstants.login_schema",{"_index":503,"title":{},"body":{"injectables/LoginService.html":{}}}],["injectmodel(movieconstants.movie_schema",{"_index":672,"title":{},"body":{"injectables/MovieService.html":{}}}],["injectmodel(reviewconstants.review_schema",{"_index":760,"title":{},"body":{"injectables/ReviewService.html":{}}}],["injectmodel(userconstants.user_schema",{"_index":850,"title":{},"body":{"injectables/UserService.html":{}}}],["inspired",{"_index":378,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["install",{"_index":934,"title":{},"body":{"dependencies.html":{}}}],["installation",{"_index":962,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":963,"title":{},"body":{"index.html":{}}}],["instance",{"_index":108,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/LoggerService.html":{}}}],["instanceof",{"_index":322,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["intercept",{"_index":339,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["intercept(context",{"_index":348,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["interface",{"_index":531,"title":{"interfaces/Movie.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"interfaces/User.html":{}},"body":{"interfaces/Movie.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interface/movies.interface",{"_index":605,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/SearchMovieResponseDto.html":{}}}],["interface/review.interface",{"_index":759,"title":{},"body":{"injectables/ReviewService.html":{}}}],["interface/user.interface",{"_index":817,"title":{},"body":{"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["interfaces",{"_index":533,"title":{},"body":{"interfaces/Movie.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"interfaces/User.html":{},"overview.html":{}}}],["invalid",{"_index":507,"title":{},"body":{"injectables/LoginService.html":{}}}],["invalida",{"_index":512,"title":{},"body":{"injectables/LoginService.html":{}}}],["isadmin",{"_index":271,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{}}}],["isarray",{"_index":723,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["isboolean",{"_index":292,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["isdatestring",{"_index":225,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/UpdateMovieDto.html":{}}}],["isexcluded",{"_index":130,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["isexcluded(originalurl",{"_index":166,"title":{},"body":{"injectables/AuthService.html":{}}}],["isglobal",{"_index":76,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":223,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{}}}],["isnumber",{"_index":261,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{}}}],["isoptional",{"_index":224,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/UpdateMovieDto.html":{}}}],["isproductionenv",{"_index":395,"title":{},"body":{"classes/LoggerService.html":{}}}],["isstring",{"_index":222,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{}}}],["istestenv",{"_index":396,"title":{},"body":{"classes/LoggerService.html":{}}}],["isuserexists",{"_index":514,"title":{},"body":{"injectables/LoginService.html":{}}}],["joi.number",{"_index":1000,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.object().keys",{"_index":997,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.schema",{"_index":995,"title":{},"body":{"miscellaneous/variables.html":{}}}],["joi.string().required",{"_index":998,"title":{},"body":{"miscellaneous/variables.html":{}}}],["json.stringify(message",{"_index":330,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["jwtmodule",{"_index":146,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":148,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":161,"title":{},"body":{"injectables/AuthService.html":{}}}],["key",{"_index":879,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["keys",{"_index":877,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["lastlogin",{"_index":272,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["lastname",{"_index":273,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["level",{"_index":415,"title":{},"body":{"classes/LoggerService.html":{}}}],["limit",{"_index":571,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["limit(limit",{"_index":674,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["limit(searchrequest.to",{"_index":690,"title":{},"body":{"injectables/MovieService.html":{}}}],["line",{"_index":180,"title":{},"body":{"injectables/AuthService.html":{}}}],["lodash",{"_index":176,"title":{},"body":{"injectables/AuthService.html":{}}}],["log",{"_index":376,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["logger",{"_index":342,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["logger.interceptor",{"_index":393,"title":{},"body":{"modules/LoggerModule.html":{}}}],["logger.service",{"_index":360,"title":{},"body":{"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{}}}],["loggermodule",{"_index":33,"title":{"modules/LoggerModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoggerModule.html":{},"modules.html":{},"overview.html":{}}}],["loggerservice",{"_index":18,"title":{"classes/LoggerService.html":{}},"body":{"controllers/AppController.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"coverage.html":{},"overview.html":{}}}],["login",{"_index":430,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login(@body",{"_index":461,"title":{},"body":{"controllers/LoginController.html":{}}}],["login(logindto",{"_index":432,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["login.const",{"_index":473,"title":{},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{}}}],["login.controller",{"_index":471,"title":{},"body":{"modules/LoginModule.html":{}}}],["login.service",{"_index":450,"title":{},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{}}}],["login_schema",{"_index":1004,"title":{},"body":{"miscellaneous/variables.html":{}}}],["loginconstants",{"_index":472,"title":{},"body":{"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["loginconstants.login_schema",{"_index":477,"title":{},"body":{"modules/LoginModule.html":{}}}],["logincontroller",{"_index":427,"title":{"controllers/LoginController.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"coverage.html":{}}}],["logindetails",{"_index":504,"title":{},"body":{"injectables/LoginService.html":{}}}],["logindetails.password",{"_index":511,"title":{},"body":{"injectables/LoginService.html":{}}}],["logindto",{"_index":438,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{}}}],["logindto.password",{"_index":510,"title":{},"body":{"injectables/LoginService.html":{}}}],["logindto.username",{"_index":506,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodel",{"_index":490,"title":{},"body":{"injectables/LoginService.html":{}}}],["loginmodule",{"_index":34,"title":{"modules/LoginModule.html":{}},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules.html":{},"overview.html":{}}}],["loginrequestdto",{"_index":433,"title":{"classes/LoginRequestDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"injectables/LoginService.html":{},"coverage.html":{}}}],["loginrequestdto})@apiresponse({type",{"_index":435,"title":{},"body":{"controllers/LoginController.html":{}}}],["loginresponsedto",{"_index":436,"title":{"classes/LoginResponseDto.html":{}},"body":{"controllers/LoginController.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["loginservice",{"_index":449,"title":{"injectables/LoginService.html":{}},"body":{"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"coverage.html":{},"overview.html":{}}}],["loginterceptor",{"_index":334,"title":{"injectables/LogInterceptor.html":{}},"body":{"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"coverage.html":{},"overview.html":{}}}],["map",{"_index":358,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["map(data",{"_index":364,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["matching",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["max(150",{"_index":1002,"title":{},"body":{"miscellaneous/variables.html":{}}}],["memberof",{"_index":126,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{}}}],["message",{"_index":325,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["metadata",{"_index":940,"title":{},"body":{"dependencies.html":{}}}],["metatype",{"_index":860,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["method",{"_index":90,"title":{},"body":{"modules/AppModule.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["middleware",{"_index":97,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["middlewareconsumer",{"_index":45,"title":{},"body":{"modules/AppModule.html":{}}}],["min(0",{"_index":1001,"title":{},"body":{"miscellaneous/variables.html":{}}}],["miscellaneous",{"_index":953,"title":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["mode",{"_index":969,"title":{},"body":{"index.html":{}}}],["model",{"_index":488,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":26,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["modules",{"_index":28,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["modules/login/login.module",{"_index":70,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/movies/movies.module",{"_index":71,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/reviews/reviews.module",{"_index":72,"title":{},"body":{"modules/AppModule.html":{}}}],["modules/users/user.module",{"_index":65,"title":{},"body":{"modules/AppModule.html":{}}}],["mongodb+srv://boilerplate:dthdzjoyuy6zrghq@cluster0",{"_index":79,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":496,"title":{},"body":{"injectables/LoginService.html":{},"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":1007,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":56,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forfeature",{"_index":476,"title":{},"body":{"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["mongoosemodule.forroot",{"_index":78,"title":{},"body":{"modules/AppModule.html":{}}}],["movie",{"_index":532,"title":{"interfaces/Movie.html":{}},"body":{"interfaces/Movie.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"interfaces/ReviewDetails.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["movie.dto",{"_index":602,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["movie.dto.ts",{"_index":206,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"coverage.html":{}}}],["movie.dto.ts:13",{"_index":240,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:14",{"_index":214,"title":{},"body":{"classes/CommonMovieDataDto.html":{}}}],["movie.dto.ts:18",{"_index":238,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:20",{"_index":216,"title":{},"body":{"classes/CommonMovieDataDto.html":{}}}],["movie.dto.ts:24",{"_index":234,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:25",{"_index":218,"title":{},"body":{"classes/CommonMovieDataDto.html":{}}}],["movie.dto.ts:29",{"_index":242,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:31",{"_index":219,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:33",{"_index":232,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:35",{"_index":243,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.dto.ts:37",{"_index":244,"title":{},"body":{"classes/CreateMovieDto.html":{}}}],["movie.ts",{"_index":783,"title":{},"body":{"classes/UpdateMovieDto.html":{},"coverage.html":{}}}],["movie.ts:10",{"_index":784,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:15",{"_index":789,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:20",{"_index":788,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:26",{"_index":787,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:31",{"_index":790,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:33",{"_index":785,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:35",{"_index":786,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:37",{"_index":791,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie.ts:39",{"_index":792,"title":{},"body":{"classes/UpdateMovieDto.html":{}}}],["movie_schema",{"_index":1006,"title":{},"body":{"miscellaneous/variables.html":{}}}],["movieconstants",{"_index":642,"title":{},"body":{"modules/MovieModule.html":{},"injectables/MovieService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["movieconstants.movie_schema",{"_index":648,"title":{},"body":{"modules/MovieModule.html":{}}}],["moviecontroller",{"_index":543,"title":{"controllers/MovieController.html":{}},"body":{"controllers/MovieController.html":{},"modules/MovieModule.html":{},"coverage.html":{}}}],["moviedata",{"_index":696,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviedata.downvotes",{"_index":703,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviedata.review.score",{"_index":708,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviedata.review.total",{"_index":707,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviedata.upvotes",{"_index":700,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviegenre",{"_index":229,"title":{},"body":{"classes/CreateMovieDto.html":{},"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"miscellaneous/variables.html":{}}}],["movieid",{"_index":250,"title":{},"body":{"classes/CreateReviewDto.html":{},"controllers/MovieController.html":{},"interfaces/Review.html":{},"injectables/ReviewService.html":{},"miscellaneous/variables.html":{}}}],["movieid:string",{"_index":262,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["moviemodel",{"_index":655,"title":{},"body":{"injectables/MovieService.html":{}}}],["moviemodule",{"_index":35,"title":{"modules/MovieModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MovieModule.html":{},"modules.html":{},"overview.html":{}}}],["moviename",{"_index":230,"title":{},"body":{"classes/CreateMovieDto.html":{},"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"miscellaneous/variables.html":{}}}],["movies",{"_index":545,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/SearchMovieResponseDto.html":{}}}],["movies.const",{"_index":643,"title":{},"body":{"modules/MovieModule.html":{},"injectables/MovieService.html":{}}}],["movies.controller",{"_index":646,"title":{},"body":{"modules/MovieModule.html":{}}}],["movies.service",{"_index":596,"title":{},"body":{"controllers/MovieController.html":{},"modules/MovieModule.html":{}}}],["movieschema",{"_index":644,"title":{},"body":{"modules/MovieModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["movieservice",{"_index":595,"title":{"injectables/MovieService.html":{}},"body":{"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"coverage.html":{},"overview.html":{}}}],["name",{"_index":48,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateMovieDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":958,"title":{},"body":{"index.html":{}}}],["nestinterceptor",{"_index":354,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":55,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":67,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":147,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":57,"title":{},"body":{"modules/AppModule.html":{},"modules/LoginModule.html":{},"injectables/LoginService.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":925,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":221,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"controllers/MovieController.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"controllers/UserController.html":{},"dependencies.html":{}}}],["nestmiddleware",{"_index":118,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["new",{"_index":138,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["next",{"_index":112,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{}}}],["next.handle().pipe",{"_index":363,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["nextfunction",{"_index":113,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["node",{"_index":949,"title":{},"body":{"dependencies.html":{}}}],["npm",{"_index":937,"title":{},"body":{"dependencies.html":{},"index.html":{}}}],["number",{"_index":256,"title":{},"body":{"classes/CreateReviewDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["number(query.limit",{"_index":612,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["number(query.skip",{"_index":614,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["object",{"_index":329,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["object.keys(data.constraints",{"_index":878,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["object.keys(httpstatus).foreach(status",{"_index":321,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["observable",{"_index":353,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["optional",{"_index":50,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"interfaces/Review.html":{},"injectables/ReviewService.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["options",{"_index":689,"title":{},"body":{"injectables/MovieService.html":{}}}],["originalurl",{"_index":170,"title":{},"body":{"injectables/AuthService.html":{}}}],["others",{"_index":519,"title":{},"body":{"injectables/LoginService.html":{}}}],["out",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["overview",{"_index":981,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":919,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":124,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["param(\"id",{"_index":627,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["param(\"movieid",{"_index":634,"title":{},"body":{"controllers/MovieController.html":{}}}],["parameters",{"_index":47,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["password",{"_index":295,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["passwordvalidation",{"_index":509,"title":{},"body":{"injectables/LoginService.html":{}}}],["patch",{"_index":813,"title":{},"body":{"controllers/UserController.html":{}}}],["patch(\"/:id",{"_index":829,"title":{},"body":{"controllers/UserController.html":{}}}],["patch('/:id')@apibody({type",{"_index":811,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuser",{"_index":800,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuser(patchuserdto",{"_index":810,"title":{},"body":{"controllers/UserController.html":{}}}],["patchuserdto",{"_index":712,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["patchuserdto.updatedby",{"_index":851,"title":{},"body":{"injectables/UserService.html":{}}}],["path",{"_index":89,"title":{},"body":{"modules/AppModule.html":{}}}],["pathname",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{}}}],["pathname.startswith(suffix",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload",{"_index":165,"title":{},"body":{"injectables/AuthService.html":{}}}],["payload._id",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["ping",{"_index":9,"title":{},"body":{"controllers/AppController.html":{}}}],["pipetransform",{"_index":865,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass",{"_index":867,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plaintoclass(metatype",{"_index":870,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["plate?retrywrites=true&w=majority",{"_index":81,"title":{},"body":{"modules/AppModule.html":{}}}],["plugin",{"_index":932,"title":{},"body":{"dependencies.html":{}}}],["pong",{"_index":23,"title":{},"body":{"controllers/AppController.html":{}}}],["post",{"_index":367,"title":{},"body":{"injectables/LogInterceptor.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["post(\"/login",{"_index":459,"title":{},"body":{"controllers/LoginController.html":{}}}],["post(\"/register",{"_index":464,"title":{},"body":{"controllers/LoginController.html":{}}}],["post(\"/search",{"_index":629,"title":{},"body":{"controllers/MovieController.html":{}}}],["post(\":movieid/review",{"_index":636,"title":{},"body":{"controllers/MovieController.html":{}}}],["post(\":movieid/vote",{"_index":631,"title":{},"body":{"controllers/MovieController.html":{}}}],["post('/login')@usepipes(validationpipe)@apibody({type",{"_index":434,"title":{},"body":{"controllers/LoginController.html":{}}}],["post('/register')@usepipes(validationpipe)@apibody({type",{"_index":441,"title":{},"body":{"controllers/LoginController.html":{}}}],["post('/search')@usepipes(validationpipe)@apibody({type",{"_index":577,"title":{},"body":{"controllers/MovieController.html":{}}}],["post(':movieid/review')@apibody({type",{"_index":554,"title":{},"body":{"controllers/MovieController.html":{}}}],["post(':movieid/vote')@apiokresponse()@apibearerauth()@apiquery({name",{"_index":587,"title":{},"body":{"controllers/MovieController.html":{}}}],["prefix",{"_index":429,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["private",{"_index":336,"title":{},"body":{"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["process.env.node_env",{"_index":423,"title":{},"body":{"classes/LoggerService.html":{}}}],["production",{"_index":425,"title":{},"body":{"classes/LoggerService.html":{},"index.html":{}}}],["promise",{"_index":117,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["properties",{"_index":207,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoggerService.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"interfaces/Movie.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{}}}],["provide",{"_index":85,"title":{},"body":{"modules/AppModule.html":{}}}],["providers",{"_index":84,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["public",{"_index":158,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["put",{"_index":594,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["put(\"/:id",{"_index":626,"title":{},"body":{"controllers/MovieController.html":{}}}],["query",{"_index":574,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["query(\"vote",{"_index":633,"title":{},"body":{"controllers/MovieController.html":{}}}],["query.limit",{"_index":611,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["query.skip",{"_index":613,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["rating",{"_index":251,"title":{},"body":{"classes/CreateReviewDto.html":{},"interfaces/Review.html":{},"miscellaneous/variables.html":{}}}],["readonly",{"_index":128,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["reflect",{"_index":939,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":687,"title":{},"body":{"injectables/MovieService.html":{}}}],["register",{"_index":486,"title":{},"body":{"injectables/LoginService.html":{}}}],["register(createuserdto",{"_index":494,"title":{},"body":{"injectables/LoginService.html":{}}}],["registeruser",{"_index":431,"title":{},"body":{"controllers/LoginController.html":{}}}],["registeruser(createuserdto",{"_index":439,"title":{},"body":{"controllers/LoginController.html":{}}}],["registeruserdto",{"_index":440,"title":{"classes/RegisterUserDto.html":{}},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["registeruserdto})@apiresponse({type",{"_index":442,"title":{},"body":{"controllers/LoginController.html":{}}}],["registeruserresponsedto",{"_index":726,"title":{"classes/RegisterUserResponseDto.html":{}},"body":{"classes/RegisterUserResponseDto.html":{},"coverage.html":{}}}],["releasedate",{"_index":231,"title":{},"body":{"classes/CreateMovieDto.html":{},"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"miscellaneous/variables.html":{}}}],["repository",{"_index":961,"title":{},"body":{"index.html":{}}}],["req",{"_index":593,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["request",{"_index":110,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["request.dto",{"_index":453,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{}}}],["request.dto.ts",{"_index":480,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/SearchMovieRequestDto.html":{},"coverage.html":{}}}],["request.dto.ts:13",{"_index":481,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/SearchMovieRequestDto.html":{}}}],["request.dto.ts:17",{"_index":775,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["request.dto.ts:22",{"_index":777,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["request.dto.ts:27",{"_index":778,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["request.dto.ts:8",{"_index":482,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/SearchMovieRequestDto.html":{}}}],["request.headers.authorization",{"_index":134,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["request.ip",{"_index":372,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["request.method",{"_index":366,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["request.originalurl",{"_index":133,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/LogInterceptor.html":{}}}],["request.protocol}://${request.get(\"host",{"_index":388,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["request.user",{"_index":624,"title":{},"body":{"controllers/MovieController.html":{}}}],["request.user._id",{"_index":826,"title":{},"body":{"controllers/UserController.html":{}}}],["request[\"user",{"_index":135,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["requestmethod",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["requestmethod.all",{"_index":91,"title":{},"body":{"modules/AppModule.html":{}}}],["require(\"url",{"_index":177,"title":{},"body":{"injectables/AuthService.html":{}}}],["required",{"_index":1003,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}],["response",{"_index":111,"title":{},"body":{"injectables/AuthMiddleware.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["response.dto",{"_index":452,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"controllers/UserController.html":{}}}],["response.dto.ts",{"_index":267,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieResponseDto.html":{},"coverage.html":{}}}],["response.dto.ts:10",{"_index":780,"title":{},"body":{"classes/SearchMovieResponseDto.html":{}}}],["response.dto.ts:12",{"_index":735,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:14",{"_index":281,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:15",{"_index":731,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:18",{"_index":729,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:20",{"_index":286,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:23",{"_index":732,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:26",{"_index":291,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:29",{"_index":727,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:31",{"_index":284,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:32",{"_index":733,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:35",{"_index":734,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:36",{"_index":287,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:41",{"_index":285,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:46",{"_index":282,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:5",{"_index":483,"title":{},"body":{"classes/LoginResponseDto.html":{}}}],["response.dto.ts:51",{"_index":280,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:56",{"_index":288,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:6",{"_index":728,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.dto.ts:61",{"_index":277,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:66",{"_index":278,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:7",{"_index":781,"title":{},"body":{"classes/SearchMovieResponseDto.html":{}}}],["response.dto.ts:71",{"_index":289,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:76",{"_index":290,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{}}}],["response.dto.ts:9",{"_index":730,"title":{},"body":{"classes/RegisterUserResponseDto.html":{}}}],["response.status(statuscode).json",{"_index":331,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["responsestatus",{"_index":365,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["result",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["result.length",{"_index":528,"title":{},"body":{"injectables/LoginService.html":{}}}],["result.save",{"_index":526,"title":{},"body":{"injectables/LoginService.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["results",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["review",{"_index":537,"title":{"interfaces/Review.html":{}},"body":{"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["review.dto",{"_index":607,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{}}}],["review.dto.ts",{"_index":249,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["review.dto.ts:12",{"_index":254,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:17",{"_index":258,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:19",{"_index":255,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:21",{"_index":252,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:23",{"_index":253,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:25",{"_index":259,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review.dto.ts:27",{"_index":260,"title":{},"body":{"classes/CreateReviewDto.html":{}}}],["review_schema",{"_index":1012,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reviewconstants",{"_index":742,"title":{},"body":{"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reviewconstants.review_schema",{"_index":746,"title":{},"body":{"modules/ReviewModule.html":{}}}],["reviewdata",{"_index":557,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["reviewdata.movieid",{"_index":705,"title":{},"body":{"injectables/MovieService.html":{}}}],["reviewdata.rating",{"_index":709,"title":{},"body":{"injectables/MovieService.html":{}}}],["reviewdetails",{"_index":539,"title":{"interfaces/ReviewDetails.html":{}},"body":{"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"coverage.html":{}}}],["reviewed",{"_index":766,"title":{},"body":{"injectables/ReviewService.html":{}}}],["reviewinfo",{"_index":710,"title":{},"body":{"injectables/MovieService.html":{}}}],["reviewmodel",{"_index":752,"title":{},"body":{"injectables/ReviewService.html":{}}}],["reviewmodule",{"_index":36,"title":{"modules/ReviewModule.html":{}},"body":{"modules/AppModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules.html":{},"overview.html":{}}}],["reviewname",{"_index":762,"title":{},"body":{"injectables/ReviewService.html":{}}}],["reviews.const",{"_index":743,"title":{},"body":{"modules/ReviewModule.html":{},"injectables/ReviewService.html":{}}}],["reviews.service",{"_index":741,"title":{},"body":{"modules/ReviewModule.html":{}}}],["reviews/dto/create",{"_index":606,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["reviews/reviews.module",{"_index":647,"title":{},"body":{"modules/MovieModule.html":{}}}],["reviews/reviews.service",{"_index":671,"title":{},"body":{"injectables/MovieService.html":{}}}],["reviewschema",{"_index":744,"title":{},"body":{"modules/ReviewModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["reviewservice",{"_index":653,"title":{"injectables/ReviewService.html":{}},"body":{"injectables/MovieService.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"coverage.html":{},"overview.html":{}}}],["rimraf",{"_index":942,"title":{},"body":{"dependencies.html":{}}}],["routes",{"_index":116,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["run",{"_index":966,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":356,"title":{},"body":{"injectables/LogInterceptor.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":359,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["salt",{"_index":521,"title":{},"body":{"injectables/LoginService.html":{}}}],["salt_password_lenght",{"_index":1005,"title":{},"body":{"miscellaneous/variables.html":{}}}],["schema",{"_index":478,"title":{},"body":{"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{}}}],["schema/movies.schema",{"_index":645,"title":{},"body":{"modules/MovieModule.html":{}}}],["schema/review.schema",{"_index":745,"title":{},"body":{"modules/ReviewModule.html":{}}}],["schema/user.schema",{"_index":837,"title":{},"body":{"modules/UserModule.html":{}}}],["score",{"_index":542,"title":{},"body":{"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/ReviewDetails.html":{},"miscellaneous/variables.html":{}}}],["searchmovie",{"_index":550,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["searchmovie(searchmovie",{"_index":575,"title":{},"body":{"controllers/MovieController.html":{}}}],["searchmovie(searchrequest",{"_index":663,"title":{},"body":{"injectables/MovieService.html":{}}}],["searchmovierequestdto",{"_index":576,"title":{"classes/SearchMovieRequestDto.html":{}},"body":{"controllers/MovieController.html":{},"classes/SearchMovieRequestDto.html":{},"coverage.html":{}}}],["searchmovierequestdto})@apiresponse({type",{"_index":578,"title":{},"body":{"controllers/MovieController.html":{}}}],["searchmovieresponsedto",{"_index":579,"title":{"classes/SearchMovieResponseDto.html":{}},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/SearchMovieResponseDto.html":{},"coverage.html":{}}}],["searchrequest",{"_index":665,"title":{},"body":{"injectables/MovieService.html":{}}}],["searchrequest.searchtext",{"_index":688,"title":{},"body":{"injectables/MovieService.html":{}}}],["searchrequest.sortby",{"_index":693,"title":{},"body":{"injectables/MovieService.html":{}}}],["searchrequest.sortkey",{"_index":692,"title":{},"body":{"injectables/MovieService.html":{}}}],["searchtext",{"_index":771,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["secret",{"_index":149,"title":{},"body":{"modules/AuthModule.html":{}}}],["see",{"_index":380,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["service",{"_index":155,"title":{},"body":{"injectables/AuthService.html":{}}}],["signoptions",{"_index":151,"title":{},"body":{"modules/AuthModule.html":{}}}],["silent",{"_index":416,"title":{},"body":{"classes/LoggerService.html":{}}}],["skip",{"_index":568,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["skip(searchrequest.from",{"_index":691,"title":{},"body":{"injectables/MovieService.html":{}}}],["skip(skip",{"_index":675,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["sort",{"_index":676,"title":{},"body":{"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"injectables/UserService.html":{}}}],["sortby",{"_index":772,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["sortkey",{"_index":773,"title":{},"body":{"classes/SearchMovieRequestDto.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"modules/LoggerModule.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"modules/LoginModule.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"modules/MovieModule.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"modules/ReviewModule.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["squid",{"_index":379,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/.../login.const.ts",{"_index":988,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":955,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../movies.const.ts",{"_index":989,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../movies.schema.ts",{"_index":990,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../review.schema.ts",{"_index":992,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../reviews.const.ts",{"_index":991,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.const.ts",{"_index":993,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.schema.ts",{"_index":994,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user.validations.ts",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:7",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.module.ts:41",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["src/common/filters/exception.filters.ts",{"_index":305,"title":{},"body":{"classes/GlobalExceptionFilter.html":{},"coverage.html":{}}}],["src/common/filters/exception.filters.ts:10",{"_index":308,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["src/common/filters/exception.filters.ts:14",{"_index":312,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["src/common/interceptors/logger/logger.interceptor.ts",{"_index":335,"title":{},"body":{"injectables/LogInterceptor.html":{},"coverage.html":{}}}],["src/common/interceptors/logger/logger.interceptor.ts:15",{"_index":341,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/common/interceptors/logger/logger.interceptor.ts:18",{"_index":351,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/common/interceptors/logger/logger.interceptor.ts:53",{"_index":344,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/common/interceptors/logger/logger.interceptor.ts:57",{"_index":347,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["src/common/interceptors/logger/logger.module.ts",{"_index":392,"title":{},"body":{"modules/LoggerModule.html":{}}}],["src/common/interceptors/logger/logger.service.ts",{"_index":394,"title":{},"body":{"classes/LoggerService.html":{},"coverage.html":{}}}],["src/common/interceptors/logger/logger.service.ts:29",{"_index":402,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/common/interceptors/logger/logger.service.ts:33",{"_index":400,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/common/interceptors/logger/logger.service.ts:37",{"_index":404,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/common/interceptors/logger/logger.service.ts:4",{"_index":397,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/common/interceptors/logger/logger.service.ts:41",{"_index":403,"title":{},"body":{"classes/LoggerService.html":{}}}],["src/common/middlewares/auth/auth.middleware.ts",{"_index":94,"title":{},"body":{"injectables/AuthMiddleware.html":{},"coverage.html":{}}}],["src/common/middlewares/auth/auth.middleware.ts:18",{"_index":106,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/auth/auth.middleware.ts:35",{"_index":114,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["src/common/middlewares/auth/auth.module.ts",{"_index":144,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/common/middlewares/auth/auth.service.ts",{"_index":154,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/common/middlewares/auth/auth.service.ts:14",{"_index":162,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/middlewares/auth/auth.service.ts:26",{"_index":173,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/middlewares/auth/auth.service.ts:36",{"_index":164,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/middlewares/auth/auth.service.ts:49",{"_index":167,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/common/pipes/validation.pipe.ts",{"_index":855,"title":{},"body":{"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["src/common/pipes/validation.pipe.ts:12",{"_index":863,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/common/pipes/validation.pipe.ts:34",{"_index":859,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["src/main.ts",{"_index":896,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/login/dto/login",{"_index":479,"title":{},"body":{"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"coverage.html":{}}}],["src/modules/login/dto/register",{"_index":725,"title":{},"body":{"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"coverage.html":{}}}],["src/modules/login/login.const.ts",{"_index":900,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/login/login.controller.ts",{"_index":428,"title":{},"body":{"controllers/LoginController.html":{},"coverage.html":{}}}],["src/modules/login/login.controller.ts:27",{"_index":437,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/modules/login/login.controller.ts:37",{"_index":443,"title":{},"body":{"controllers/LoginController.html":{}}}],["src/modules/login/login.module.ts",{"_index":470,"title":{},"body":{"modules/LoginModule.html":{}}}],["src/modules/login/login.service.ts",{"_index":484,"title":{},"body":{"injectables/LoginService.html":{},"coverage.html":{}}}],["src/modules/login/login.service.ts:12",{"_index":489,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:18",{"_index":493,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:42",{"_index":495,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/login/login.service.ts:58",{"_index":492,"title":{},"body":{"injectables/LoginService.html":{}}}],["src/modules/movies/dto/common",{"_index":205,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"coverage.html":{}}}],["src/modules/movies/dto/create",{"_index":228,"title":{},"body":{"classes/CreateMovieDto.html":{},"coverage.html":{}}}],["src/modules/movies/dto/search",{"_index":770,"title":{},"body":{"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"coverage.html":{}}}],["src/modules/movies/dto/update",{"_index":782,"title":{},"body":{"classes/UpdateMovieDto.html":{},"coverage.html":{}}}],["src/modules/movies/interface/movies.interface.ts",{"_index":534,"title":{},"body":{"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"coverage.html":{}}}],["src/modules/movies/movies.const.ts",{"_index":907,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/movies/movies.controller.ts",{"_index":544,"title":{},"body":{"controllers/MovieController.html":{},"coverage.html":{}}}],["src/modules/movies/movies.controller.ts:107",{"_index":589,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:117",{"_index":556,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:43",{"_index":573,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:53",{"_index":565,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:64",{"_index":560,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:75",{"_index":585,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.controller.ts:96",{"_index":580,"title":{},"body":{"controllers/MovieController.html":{}}}],["src/modules/movies/movies.module.ts",{"_index":641,"title":{},"body":{"modules/MovieModule.html":{}}}],["src/modules/movies/movies.service.ts",{"_index":649,"title":{},"body":{"injectables/MovieService.html":{},"coverage.html":{}}}],["src/modules/movies/movies.service.ts:18",{"_index":654,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:25",{"_index":662,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:34",{"_index":660,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:42",{"_index":659,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:51",{"_index":667,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:64",{"_index":664,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:83",{"_index":669,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/movies.service.ts:99",{"_index":657,"title":{},"body":{"injectables/MovieService.html":{}}}],["src/modules/movies/schema/movies.schema.ts",{"_index":909,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/reviews/dto/create",{"_index":248,"title":{},"body":{"classes/CreateReviewDto.html":{},"coverage.html":{}}}],["src/modules/reviews/interface/review.interface.ts",{"_index":736,"title":{},"body":{"interfaces/Review.html":{},"coverage.html":{}}}],["src/modules/reviews/reviews.const.ts",{"_index":910,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/reviews/reviews.module.ts",{"_index":740,"title":{},"body":{"modules/ReviewModule.html":{}}}],["src/modules/reviews/reviews.service.ts",{"_index":747,"title":{},"body":{"injectables/ReviewService.html":{},"coverage.html":{}}}],["src/modules/reviews/reviews.service.ts:10",{"_index":751,"title":{},"body":{"injectables/ReviewService.html":{}}}],["src/modules/reviews/reviews.service.ts:16",{"_index":758,"title":{},"body":{"injectables/ReviewService.html":{}}}],["src/modules/reviews/reviews.service.ts:25",{"_index":754,"title":{},"body":{"injectables/ReviewService.html":{}}}],["src/modules/reviews/reviews.service.ts:44",{"_index":756,"title":{},"body":{"injectables/ReviewService.html":{}}}],["src/modules/reviews/schema/review.schema.ts",{"_index":911,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/dto/create",{"_index":264,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/modules/users/dto/patch",{"_index":713,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/modules/users/interface/user.interface.ts",{"_index":793,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/modules/users/schema/user.schema.ts",{"_index":913,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.const.ts",{"_index":914,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/modules/users/user.controller.ts",{"_index":795,"title":{},"body":{"controllers/UserController.html":{},"coverage.html":{}}}],["src/modules/users/user.controller.ts:45",{"_index":803,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/users/user.controller.ts:53",{"_index":806,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/users/user.controller.ts:63",{"_index":809,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/users/user.controller.ts:73",{"_index":812,"title":{},"body":{"controllers/UserController.html":{}}}],["src/modules/users/user.module.ts",{"_index":835,"title":{},"body":{"modules/UserModule.html":{}}}],["src/modules/users/user.service.ts",{"_index":841,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/modules/users/user.service.ts:10",{"_index":844,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/users/user.service.ts:16",{"_index":849,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/users/user.service.ts:25",{"_index":848,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/users/user.service.ts:34",{"_index":846,"title":{},"body":{"injectables/UserService.html":{}}}],["src/modules/users/validations/user.validations.ts",{"_index":915,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["staging",{"_index":426,"title":{},"body":{"classes/LoggerService.html":{}}}],["start",{"_index":967,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":970,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":971,"title":{},"body":{"index.html":{}}}],["started",{"_index":957,"title":{"index.html":{}},"body":{}}],["starter",{"_index":960,"title":{},"body":{"index.html":{}}}],["starttime",{"_index":345,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["statements",{"_index":887,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":274,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["statuscode",{"_index":319,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["stderrlevels",{"_index":420,"title":{},"body":{"classes/LoggerService.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/SearchMovieRequestDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["suffix",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":314,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["support",{"_index":978,"title":{},"body":{"modules.html":{}}}],["svg",{"_index":979,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":945,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":918,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":917,"title":{},"body":{"coverage.html":{}}}],["taken",{"_index":518,"title":{},"body":{"injectables/LoginService.html":{}}}],["test",{"_index":424,"title":{},"body":{"classes/LoggerService.html":{},"index.html":{}}}],["test:cov",{"_index":976,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":975,"title":{},"body":{"index.html":{}}}],["tests",{"_index":973,"title":{},"body":{"index.html":{}}}],["this.authservice.createauthtoken(result",{"_index":463,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.authservice.isexcluded",{"_index":132,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.authservice.validateauthtoken(token",{"_index":136,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["this.checkusernameexists",{"_index":515,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.getmoviebyid(_id",{"_index":697,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.getreviewbyuserandmovieid",{"_index":764,"title":{},"body":{"injectables/ReviewService.html":{}}}],["this.gettimedelta(starttime",{"_index":371,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.geturl",{"_index":373,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.geturl(request",{"_index":386,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.instance",{"_index":413,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.error(message",{"_index":422,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.instance.info(message",{"_index":421,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.isproductionenv",{"_index":407,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.istestenv",{"_index":417,"title":{},"body":{"classes/LoggerService.html":{}}}],["this.jwtservice.sign",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.verify(token",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.logger.error",{"_index":384,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.logger.info",{"_index":370,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["this.loginmodel.create(createuserdto",{"_index":525,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.find",{"_index":527,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginmodel.findone",{"_index":505,"title":{},"body":{"injectables/LoginService.html":{}}}],["this.loginservice.login(logindto",{"_index":462,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.loginservice.register(createuserdto",{"_index":465,"title":{},"body":{"controllers/LoginController.html":{}}}],["this.moviemodel",{"_index":673,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.moviemodel.create(createmoviedto",{"_index":684,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.moviemodel.find().count",{"_index":695,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.moviemodel.findbyid(id",{"_index":678,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.moviemodel.findbyidandupdate",{"_index":686,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.moviemodel.findbyidandupdate(_id",{"_index":704,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.movieservice.addreview(movieid",{"_index":637,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.create(createmoviedto",{"_index":625,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.getmoviebyid(id",{"_index":621,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.getmovies(skip",{"_index":615,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.searchmovie(searchmovie",{"_index":630,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.update",{"_index":628,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.movieservice.updatevote(movieid",{"_index":635,"title":{},"body":{"controllers/MovieController.html":{}}}],["this.reviewmodel",{"_index":761,"title":{},"body":{"injectables/ReviewService.html":{}}}],["this.reviewmodel.create(createreviewdto",{"_index":768,"title":{},"body":{"injectables/ReviewService.html":{}}}],["this.reviewmodel.findone",{"_index":769,"title":{},"body":{"injectables/ReviewService.html":{}}}],["this.reviewservice.create(reviewdata",{"_index":706,"title":{},"body":{"injectables/MovieService.html":{}}}],["this.tovalidate(metatype",{"_index":869,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["this.usermodel",{"_index":853,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyid(id",{"_index":854,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findbyidandupdate",{"_index":852,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.getuserbyid",{"_index":825,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getuserbyid(id",{"_index":828,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.getusers(skip",{"_index":821,"title":{},"body":{"controllers/UserController.html":{}}}],["this.userservice.update(id",{"_index":830,"title":{},"body":{"controllers/UserController.html":{}}}],["throw",{"_index":137,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"injectables/ReviewService.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["throwerror",{"_index":355,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["throwerror(err",{"_index":387,"title":{},"body":{"injectables/LogInterceptor.html":{}}}],["timestamp",{"_index":332,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["timestamps",{"_index":1010,"title":{},"body":{"miscellaneous/variables.html":{}}}],["token",{"_index":115,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CreateUpdateUserResponseDto.html":{},"controllers/LoginController.html":{},"classes/LoginResponseDto.html":{},"classes/RegisterUserResponseDto.html":{}}}],["token.replace(\"bearer",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{}}}],["total",{"_index":540,"title":{},"body":{"interfaces/Movie.html":{},"injectables/MovieService.html":{},"interfaces/ReviewDetails.html":{},"classes/SearchMovieResponseDto.html":{},"miscellaneous/variables.html":{}}}],["tovalidate",{"_index":856,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["tovalidate(metatype",{"_index":858,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform",{"_index":857,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transform(value",{"_index":861,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["transformer",{"_index":868,"title":{},"body":{"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["transports",{"_index":418,"title":{},"body":{"classes/LoggerService.html":{}}}],["true",{"_index":77,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/LoginService.html":{},"miscellaneous/variables.html":{}}}],["try",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{},"injectables/LoginService.html":{}}}],["type",{"_index":49,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/GlobalExceptionFilter.html":{},"injectables/LogInterceptor.html":{},"classes/LoggerService.html":{},"controllers/LoginController.html":{},"classes/LoginRequestDto.html":{},"classes/LoginResponseDto.html":{},"injectables/LoginService.html":{},"interfaces/Movie.html":{},"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"injectables/ReviewService.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["typeof",{"_index":328,"title":{},"body":{"classes/GlobalExceptionFilter.html":{}}}],["types",{"_index":592,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{}}}],["types.includes(metatype",{"_index":883,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["typescript",{"_index":181,"title":{},"body":{"injectables/AuthService.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{},"index.html":{}}}],["ubr7a.mongodb.net/boiler",{"_index":80,"title":{},"body":{"modules/AppModule.html":{}}}],["ui",{"_index":946,"title":{},"body":{"dependencies.html":{}}}],["undefined",{"_index":588,"title":{},"body":{"controllers/MovieController.html":{},"injectables/ValidationPipe.html":{}}}],["undefined})@isstring()@isnotempty",{"_index":237,"title":{},"body":{"classes/CreateMovieDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/UpdateMovieDto.html":{}}}],["unique",{"_index":1008,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":972,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":561,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"injectables/ValidationPipe.html":{}}}],["unlike",{"_index":632,"title":{},"body":{"controllers/MovieController.html":{}}}],["update",{"_index":265,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"injectables/MovieService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["update(_id",{"_index":666,"title":{},"body":{"injectables/MovieService.html":{},"injectables/UserService.html":{}}}],["updatedat",{"_index":210,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"interfaces/Movie.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["updatedata",{"_index":698,"title":{},"body":{"injectables/MovieService.html":{}}}],["updatedata[\"downvotes",{"_index":702,"title":{},"body":{"injectables/MovieService.html":{}}}],["updatedata[\"upvotes",{"_index":699,"title":{},"body":{"injectables/MovieService.html":{}}}],["updatedby",{"_index":211,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"interfaces/Movie.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/Review.html":{},"interfaces/ReviewDetails.html":{},"classes/UpdateMovieDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["updatedby?:string",{"_index":724,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["updatemovie",{"_index":551,"title":{},"body":{"controllers/MovieController.html":{}}}],["updatemovie(updatemoviedto",{"_index":581,"title":{},"body":{"controllers/MovieController.html":{}}}],["updatemoviedto",{"_index":582,"title":{"classes/UpdateMovieDto.html":{}},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{},"classes/UpdateMovieDto.html":{},"coverage.html":{}}}],["updatemoviedto.updatedby",{"_index":685,"title":{},"body":{"injectables/MovieService.html":{}}}],["updatemoviedto})@apiresponse({type",{"_index":584,"title":{},"body":{"controllers/MovieController.html":{}}}],["updatevote",{"_index":651,"title":{},"body":{"injectables/MovieService.html":{}}}],["updatevote(_id",{"_index":668,"title":{},"body":{"injectables/MovieService.html":{}}}],["upvotes",{"_index":538,"title":{},"body":{"interfaces/Movie.html":{},"interfaces/ReviewDetails.html":{},"miscellaneous/variables.html":{}}}],["url",{"_index":169,"title":{},"body":{"injectables/AuthService.html":{}}}],["url.parse(originalurl).path",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{}}}],["use",{"_index":102,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["use(request",{"_index":109,"title":{},"body":{"injectables/AuthMiddleware.html":{}}}],["useclass",{"_index":86,"title":{},"body":{"modules/AppModule.html":{}}}],["usecreateindex",{"_index":82,"title":{},"body":{"modules/AppModule.html":{}}}],["usenewurlparser",{"_index":83,"title":{},"body":{"modules/AppModule.html":{}}}],["usepipes",{"_index":445,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["usepipes(validationpipe",{"_index":460,"title":{},"body":{"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["user",{"_index":266,"title":{"interfaces/User.html":{}},"body":{"classes/CreateUpdateUserResponseDto.html":{},"injectables/LoginService.html":{},"controllers/MovieController.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["user.const",{"_index":839,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{}}}],["user.controller",{"_index":836,"title":{},"body":{"modules/UserModule.html":{}}}],["user.dto",{"_index":456,"title":{},"body":{"controllers/LoginController.html":{},"injectables/LoginService.html":{},"controllers/UserController.html":{},"injectables/UserService.html":{}}}],["user.dto.ts",{"_index":294,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:14",{"_index":297,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:15",{"_index":720,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:20",{"_index":301,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:21",{"_index":716,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:23",{"_index":721,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.dto.ts:26",{"_index":304,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:32",{"_index":302,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:37",{"_index":299,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:42",{"_index":303,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/RegisterUserDto.html":{}}}],["user.dto.ts:47",{"_index":300,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:52",{"_index":298,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:57",{"_index":296,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:9",{"_index":718,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["user.service",{"_index":815,"title":{},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{}}}],["user_schema",{"_index":1013,"title":{},"body":{"miscellaneous/variables.html":{}}}],["userconstants",{"_index":838,"title":{},"body":{"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userconstants.user_schema",{"_index":840,"title":{},"body":{"modules/UserModule.html":{}}}],["usercontroller",{"_index":794,"title":{"controllers/UserController.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"coverage.html":{}}}],["usermodel",{"_index":845,"title":{},"body":{"injectables/UserService.html":{}}}],["usermodule",{"_index":37,"title":{"modules/UserModule.html":{}},"body":{"modules/AppModule.html":{},"modules/UserModule.html":{},"modules.html":{},"overview.html":{}}}],["username",{"_index":275,"title":{},"body":{"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"injectables/LoginService.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"interfaces/User.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":796,"title":{},"body":{"controllers/UserController.html":{}}}],["users/interface/user.interface",{"_index":502,"title":{},"body":{"injectables/LoginService.html":{}}}],["users/schema/user.schema",{"_index":475,"title":{},"body":{"modules/LoginModule.html":{}}}],["userservice",{"_index":814,"title":{"injectables/UserService.html":{}},"body":{"controllers/UserController.html":{},"modules/UserModule.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["usersschema",{"_index":474,"title":{},"body":{"modules/LoginModule.html":{},"modules/UserModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["valid",{"_index":619,"title":{},"body":{"controllers/MovieController.html":{},"controllers/UserController.html":{}}}],["validate",{"_index":98,"title":{},"body":{"injectables/AuthMiddleware.html":{},"injectables/AuthService.html":{},"injectables/ValidationPipe.html":{}}}],["validate(object",{"_index":872,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validateauthtoken",{"_index":159,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateauthtoken(token",{"_index":172,"title":{},"body":{"injectables/AuthService.html":{}}}],["validationmsg",{"_index":874,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationmsg.push(data.constraints[keys[key",{"_index":880,"title":{},"body":{"injectables/ValidationPipe.html":{}}}],["validationpipe",{"_index":68,"title":{"injectables/ValidationPipe.html":{}},"body":{"modules/AppModule.html":{},"controllers/LoginController.html":{},"controllers/MovieController.html":{},"controllers/UserController.html":{},"injectables/ValidationPipe.html":{},"coverage.html":{}}}],["validator",{"_index":226,"title":{},"body":{"classes/CommonMovieDataDto.html":{},"classes/CreateMovieDto.html":{},"classes/CreateReviewDto.html":{},"classes/CreateUpdateUserResponseDto.html":{},"classes/CreateUserDto.html":{},"classes/LoginRequestDto.html":{},"classes/PatchUserDto.html":{},"classes/RegisterUserDto.html":{},"classes/RegisterUserResponseDto.html":{},"classes/SearchMovieRequestDto.html":{},"classes/SearchMovieResponseDto.html":{},"classes/UpdateMovieDto.html":{},"injectables/ValidationPipe.html":{},"dependencies.html":{}}}],["value",{"_index":864,"title":{},"body":{"injectables/ValidationPipe.html":{},"miscellaneous/variables.html":{}}}],["variable",{"_index":901,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":986,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["versionkey",{"_index":1011,"title":{},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":52,"title":{},"body":{"modules/AppModule.html":{},"classes/GlobalExceptionFilter.html":{},"classes/LoggerService.html":{}}}],["vote",{"_index":552,"title":{},"body":{"controllers/MovieController.html":{},"injectables/MovieService.html":{}}}],["vote(vote",{"_index":586,"title":{},"body":{"controllers/MovieController.html":{}}}],["watch",{"_index":968,"title":{},"body":{"index.html":{}}}],["webpack",{"_index":931,"title":{},"body":{"dependencies.html":{}}}],["winston",{"_index":405,"title":{},"body":{"classes/LoggerService.html":{},"dependencies.html":{}}}],["winston.createlogger",{"_index":414,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.colorize",{"_index":411,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.combine",{"_index":408,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.json",{"_index":410,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.simple",{"_index":412,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.format.timestamp",{"_index":409,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.logger",{"_index":398,"title":{},"body":{"classes/LoggerService.html":{}}}],["winston.transports.console",{"_index":419,"title":{},"body":{"classes/LoggerService.html":{}}}],["zoom",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/LoggerModule.html":{},"modules/LoginModule.html":{},"modules/MovieModule.html":{},"modules/ReviewModule.html":{},"modules/UserModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                ping\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        ping\n                        \n                    \n                \n            \n            \n                \nping()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from \"@nestjs/common\";\nimport { LoggerService } from \"./common/interceptors/logger/logger.service\";\n\n@Controller()\nexport class AppController {\n    @Get()\n    ping(): string {\n        return \"pong\";\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nLoginModule\n\nLoginModule\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nMovieModule\n\nMovieModule\n\nAppModule -->\n\nMovieModule->AppModule\n\n\n\n\n\nReviewModule\n\nReviewModule\n\nAppModule -->\n\nReviewModule->AppModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            LoggerModule\n                        \n                        \n                            LoginModule\n                        \n                        \n                            MovieModule\n                        \n                        \n                            ReviewModule\n                        \n                        \n                            UserModule\n                        \n                    \n                \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        configure\n                        \n                    \n                \n            \n            \n                \nconfigure(consumer: MiddlewareConsumer)\n                \n            \n\n\n            \n                \n                    Defined in src/app.module.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    consumer\n                                    \n                                            MiddlewareConsumer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { Module, MiddlewareConsumer, RequestMethod } from \"@nestjs/common\";\nimport { ConfigModule } from \"@nestjs/config\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\n\nimport { AppController } from \"./app.controller\";\nimport { AuthMiddleware } from \"./common/middlewares/auth/auth.middleware\";\nimport { AuthModule } from \"./common/middlewares/auth/auth.module\";\nimport { LoggerModule } from \"./common/interceptors/logger/logger.module\";\nimport { GlobalExceptionFilter } from \"./common/filters/exception.filters\";\nimport { UserModule } from \"./modules/users/user.module\";\nimport { APP_PIPE } from \"@nestjs/core\";\nimport { ValidationPipe } from \"./common/pipes/validation.pipe\";\nimport { LoginModule } from \"./modules/login/login.module\";\nimport { MovieModule } from \"./modules/movies/movies.module\";\nimport { ReviewModule } from \"./modules/reviews/reviews.module\";\n\n@Module({\n    imports: [\n        ConfigModule.forRoot({\n            envFilePath: \".env\",\n            isGlobal: true,\n        }),\n        MongooseModule.forRoot(\n            \"mongodb+srv://boilerplate:dtHDZjOYUY6ZRGHQ@cluster0-ubr7a.mongodb.net/boiler-plate?retryWrites=true&w=majority\",\n            { useCreateIndex: true, useNewUrlParser: true },\n        ),\n        AuthModule,\n        LoggerModule,\n        UserModule,\n        LoginModule,\n        MovieModule,\n        ReviewModule,\n    ],\n    controllers: [AppController],\n    providers: [\n        GlobalExceptionFilter,\n        { provide: APP_PIPE, useClass: ValidationPipe },\n    ],\n})\nexport class AppModule {\n    configure(consumer: MiddlewareConsumer): void {\n        consumer\n            .apply(AuthMiddleware)\n            .forRoutes({ path: \"*\", method: RequestMethod.ALL });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthMiddleware.html":{"url":"injectables/AuthMiddleware.html","title":"injectable - AuthMiddleware","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthMiddleware\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/auth/auth.middleware.ts\n        \n\n\n            \n                Description\n            \n            \n                The Auth Middleware to validate the endpoints authorization\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                use\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/auth/auth.middleware.ts:18\n                            \n                        \n\n                \n                    \n                            Creates an instance of AuthMiddleware.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        use\n                        \n                    \n                \n            \n            \n                \n                    \n                    use(request: Request, response: Response, next: NextFunction)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth/auth.middleware.ts:35\n                \n            \n\n\n            \n                \n                    To validate the authorization token for the routes\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            NextFunction\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    NestMiddleware,\n    Injectable,\n    HttpException,\n    HttpStatus,\n} from \"@nestjs/common\";\nimport { Request, Response, NextFunction } from \"express\";\nimport { AuthService } from \"./auth.service\";\n\n/**\n * The Auth Middleware to validate the endpoints authorization\n *\n * @export\n * @class AuthMiddleware\n * @implements {NestMiddleware}\n */\n@Injectable()\nexport class AuthMiddleware implements NestMiddleware {\n    /**\n     *Creates an instance of AuthMiddleware.\n     * @param {AuthService} config\n     * @memberof AuthMiddleware\n     */\n    constructor(private readonly authService: AuthService) {}\n\n    /**\n     * To validate the authorization token for the routes\n     *\n     * @param {Request} request\n     * @param {Response} response\n     * @param {NextFunction} next\n     * @returns {Promise}\n     * @memberof AuthMiddleware\n     */\n    async use(\n        request: Request,\n        response: Response,\n        next: NextFunction,\n    ): Promise {\n        const isExcluded = await this.authService.isExcluded(\n            request.originalUrl,\n        );\n\n        if (isExcluded) {\n            next();\n            return;\n        }\n        if (request.headers.authorization) {\n            const token = request.headers.authorization;\n            request[\"user\"] = await this.authService.validateAuthToken(token);\n            next();\n            return;\n        }\n        throw new HttpException(\"Invalid Token\", HttpStatus.UNAUTHORIZED);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/middlewares/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { AuthService } from \"./auth.service\";\nimport { JwtModule } from \"@nestjs/jwt\";\n\n@Module({\n    imports: [\n        JwtModule.register({\n            secret: \"H#ll0W0r!D\",\n            signOptions: { expiresIn: \"3600s\" },\n        }),\n    ],\n    providers: [AuthService],\n    exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/middlewares/auth/auth.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Auth service to check the endpoints\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createAuthToken\n                            \n                            \n                                    Public\n                                isExcluded\n                            \n                            \n                                    Public\n                                    Async\n                                validateAuthToken\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/common/middlewares/auth/auth.service.ts:14\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    createAuthToken(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        isExcluded\n                        \n                    \n                \n            \n            \n                \n                    \n                    isExcluded(originalUrl)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth/auth.service.ts:49\n                \n            \n\n\n            \n                \n                    To Check the exclude URL\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    originalUrl\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        Async\n                        validateAuthToken\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateAuthToken(token: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/middlewares/auth/auth.service.ts:26\n                \n            \n\n\n            \n                \n                    To validate the auth token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    token\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject, HttpException, HttpStatus } from \"@nestjs/common\";\nimport { find } from \"lodash\";\n\nimport url = require(\"url\");\nimport { JwtService } from \"@nestjs/jwt\";\n\n/**\n * Auth service to check the endpoints\n *\n * @export\n * @class AuthService\n */\n@Injectable()\nexport class AuthService {\n    // eslint-disable-next-line @typescript-eslint/no-empty-function\n    constructor(private readonly jwtService: JwtService) {}\n\n    /**\n     * To validate the auth token\n     *\n     * @param {string} token\n     * @returns\n     * @memberof AuthService\n     */\n    // eslint-disable-next-line @typescript-eslint/no-explicit-any\n    public async validateAuthToken(token: string): Promise {\n        try {\n            token = token.replace(\"Bearer \", \"\");\n            const result = await this.jwtService.verify(token);\n            return result;\n        } catch (error) {\n            throw new HttpException(\"Invalid Token\", HttpStatus.UNAUTHORIZED);\n        }\n    }\n\n    async createAuthToken(payload: any): Promise {\n        const token = this.jwtService.sign({ _id: payload._id });\n        return token;\n    }\n\n    /**\n     * To Check the exclude URL\n     *\n     * @public\n     * @param {*} originalUrl\n     * @returns\n     * @memberof AuthService\n     */\n    public isExcluded(originalUrl): boolean {\n        const exclude = [\"/api-docs\", \"/common\"];\n        const pathname = url.parse(originalUrl).path;\n        if (pathname === \"/\") {\n            return true;\n        }\n        return find(exclude, (suffix: string) => pathname.startsWith(suffix));\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CommonMovieDataDto.html":{"url":"classes/CommonMovieDataDto.html","title":"class - CommonMovieDataDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CommonMovieDataDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/dto/common-movie.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDateString()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/common-movie.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/common-movie.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/common-movie.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/common-movie.dto.ts:31\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsDateString,\n} from \"class-validator\";\n\nexport class CommonMovieDataDto {\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsDateString()\n    @IsOptional()\n    createdAt: Date;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    createdBy: string;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsDateString()\n    updatedAt: Date;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateMovieDto.html":{"url":"classes/CreateMovieDto.html","title":"class - CreateMovieDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateMovieDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/dto/create-movie.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                movieGenre\n                            \n                            \n                                movieName\n                            \n                            \n                                releaseDate\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:24\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieGenre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'movieGenre', enum: undefined})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/create-movie.dto.ts:37\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsDateString,\n} from \"class-validator\";\n\nexport class CreateMovieDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    movieName: string;\n\n    @ApiProperty({ name: \"movieGenre\", enum: [\"ACTION\", \"COMEDY\"] })\n    @IsString()\n    @IsNotEmpty()\n    movieGenre: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty()\n    @IsDateString()\n    @IsNotEmpty()\n    releaseDate: Date;\n\n    createdAt?: Date;\n\n    createdBy?: string;\n\n    updatedAt?: Date;\n\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateReviewDto.html":{"url":"classes/CreateReviewDto.html","title":"class - CreateReviewDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateReviewDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/dto/create-review.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                movieId\n                            \n                            \n                                rating\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:19\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        rating\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:25\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/reviews/dto/create-review.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsNumber,\n} from \"class-validator\";\n\nexport class CreateReviewDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty()\n    @IsNumber()\n    @IsNotEmpty()\n    rating: number;\n\n    movieId:string;\n    \n    createdAt?: Date;\n\n    createdBy?: string;\n\n    updatedAt?: Date;\n\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUpdateUserResponseDto.html":{"url":"classes/CreateUpdateUserResponseDto.html","title":"class - CreateUpdateUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUpdateUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-update-user-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                designation\n                            \n                            \n                                firstName\n                            \n                            \n                                imageURL\n                            \n                            \n                                isAdmin\n                            \n                            \n                                lastLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                status\n                            \n                            \n                                token\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNotEmpty()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:61\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:66\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        designation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:51\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:46\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:41\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:71\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:76\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-update-user-response.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsBoolean,\n    IsDateString,\n} from \"class-validator\";\n\nexport class CreateUpdateUserResponseDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    firstName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    lastName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    userName: string;\n\n    @ApiProperty()\n    @IsBoolean()\n    @IsNotEmpty()\n    isAdmin: boolean;\n\n    @ApiProperty()\n    @IsBoolean()\n    @IsNotEmpty()\n    status: boolean;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsDateString()\n    lastLogin: Date;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    imageURL: string;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    designation: string;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    token: string;\n\n    @ApiProperty()\n    @IsNotEmpty()\n    @IsDateString()\n    createdAt: Date;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    createdBy: string;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsDateString()\n    updatedAt: Date;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                designation\n                            \n                            \n                                firstName\n                            \n                            \n                                imageURL\n                            \n                            \n                                isAdmin\n                            \n                            \n                                lastLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        designation\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:57\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        imageURL\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:52\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isAdmin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/create-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsBoolean,\n    IsDateString,\n} from \"class-validator\";\n\nexport class CreateUserDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    firstName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    lastName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    userName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    password: string;\n\n    @ApiProperty()\n    @IsBoolean()\n    @IsNotEmpty()\n    isAdmin: boolean;\n\n    @ApiProperty()\n    @IsBoolean()\n    @IsNotEmpty()\n    status: boolean;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsDateString()\n    lastLogin: Date;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    imageURL: string;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    designation: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GlobalExceptionFilter.html":{"url":"classes/GlobalExceptionFilter.html","title":"class - GlobalExceptionFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GlobalExceptionFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/filters/exception.filters.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/filters/exception.filters.ts:10\n                            \n                        \n\n            \n        \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        catch\n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/filters/exception.filters.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import {\n    Catch,\n    ArgumentsHost,\n    HttpStatus,\n    HttpException,\n} from \"@nestjs/common\";\nimport { BaseExceptionFilter } from \"@nestjs/core\";\n\n@Catch()\nexport class GlobalExceptionFilter extends BaseExceptionFilter {\n    constructor() {\n        super();\n    }\n    catch(exception: any, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n        const request = ctx.getRequest();\n        let statusCode: number = HttpStatus.INTERNAL_SERVER_ERROR;\n        Object.keys(HttpStatus).forEach(status => {\n            if (\n                exception instanceof HttpException &&\n                exception.getStatus() === HttpStatus[status]\n            ) {\n                statusCode = HttpStatus[status];\n            }\n        });\n        let message =\n            exception instanceof Error\n                ? exception.message\n                : exception.message.error;\n        message =\n            typeof message === \"object\" ? JSON.stringify(message) : message;\n        response.status(statusCode).json({\n            statusCode: statusCode,\n            timestamp: new Date().toISOString(),\n            message: message,\n        });\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LogInterceptor.html":{"url":"injectables/LogInterceptor.html","title":"injectable - LogInterceptor","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LogInterceptor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logger/logger.interceptor.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                getTimeDelta\n                            \n                            \n                                    Private\n                                getUrl\n                            \n                            \n                                    Public\n                                intercept\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor(logger: LoggerService)\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/logger/logger.interceptor.ts:15\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        logger\n                                                  \n                                                        \n                                                                        LoggerService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getTimeDelta\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTimeDelta(startTime: number)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.interceptor.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    startTime\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         number\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        getUrl\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUrl(request: Request)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.interceptor.ts:57\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n                                    \n                                            Request\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        intercept\n                        \n                    \n                \n            \n            \n                \n                    \n                    intercept(context: ExecutionContext, next: CallHandler)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.interceptor.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    next\n                                    \n                                            CallHandler\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Observable\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    CallHandler,\n    ExecutionContext,\n    HttpStatus,\n    Injectable,\n    NestInterceptor,\n} from \"@nestjs/common\";\nimport { Request, Response } from \"express\";\nimport { Observable, throwError } from \"rxjs\";\nimport { catchError, map } from \"rxjs/operators\";\n\nimport { LoggerService } from \"./logger.service\";\n\n@Injectable()\nexport class LogInterceptor implements NestInterceptor {\n    public constructor(private readonly logger: LoggerService) {}\n\n    public intercept(\n        context: ExecutionContext,\n        next: CallHandler,\n    ): Observable {\n        const startTime = new Date().getMilliseconds();\n        const request = context.switchToHttp().getRequest();\n\n        return next.handle().pipe(\n            map(data => {\n                const responseStatus =\n                    request.method === \"POST\"\n                        ? HttpStatus.CREATED\n                        : HttpStatus.OK;\n                this.logger.info(\n                    `${this.getTimeDelta(startTime)} ${\n                        request.ip\n                    } ${responseStatus} ${request.method} ${this.getUrl(\n                        request,\n                    )}`,\n                );\n                return data;\n            }),\n            catchError(err => {\n                // Log fomat inspired by the Squid docs\n                // See https://docs.trafficserver.apache.org/en/6.1.x/admin-guide/monitoring/logging/log-formats.en.html\n                this.logger.error(\n                    `${this.getTimeDelta(startTime)} ${request.ip} ${\n                        err.status\n                    } ${request.method} ${this.getUrl(request)}`,\n                );\n                return throwError(err);\n            }),\n        );\n    }\n\n    private getTimeDelta(startTime: number): number {\n        return new Date().getMilliseconds() - startTime;\n    }\n\n    private getUrl(request: Request): string {\n        return `${request.protocol}://${request.get(\"host\")}${\n            request.originalUrl\n        }`;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoggerModule.html":{"url":"modules/LoggerModule.html","title":"module - LoggerModule","body":"\n                   \n\n\n\n\n    Modules\n    LoggerModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\n\nLogInterceptor \n\nLogInterceptor \n\n\n\nLoggerService \n\nLoggerService \n\n\n\nLoggerModule\n\nLoggerModule\n\nLogInterceptor  -->\n\nLoggerModule->LogInterceptor \n\n\n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\n\n\nLogInterceptor\n\nLogInterceptor\n\nLoggerModule -->\n\nLogInterceptor->LoggerModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/interceptors/logger/logger.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LogInterceptor\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LogInterceptor\n                        \n                        \n                            LoggerService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { LoggerService } from \"./logger.service\";\nimport { LogInterceptor } from \"./logger.interceptor\";\n\n@Module({\n    providers: [LoggerService, LogInterceptor],\n    exports: [LoggerService, LogInterceptor],\n})\nexport class LoggerModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoggerService.html":{"url":"classes/LoggerService.html","title":"class - LoggerService","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoggerService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interceptors/logger/logger.service.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                instance\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                error\n                            \n                            \n                                    Public\n                                info\n                            \n                            \n                                    Private\n                                isProductionEnv\n                            \n                            \n                                    Private\n                                isTestEnv\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \n                                Public\n                        constructor()\n                    \n                \n                        \n                            \n                                Defined in src/common/interceptors/logger/logger.service.ts:4\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instance\n                        \n                    \n                \n            \n                \n                    \n                        Type :     winston.Logger\n\n                    \n                \n                    \n                        \n                                Defined in src/common/interceptors/logger/logger.service.ts:4\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        error\n                        \n                    \n                \n            \n            \n                \n                    \n                    error(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Public\n                        info\n                        \n                    \n                \n            \n            \n                \n                    \n                    info(message: string)\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    message\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isProductionEnv\n                        \n                    \n                \n            \n            \n                \n                    \n                    isProductionEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.service.ts:41\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        isTestEnv\n                        \n                    \n                \n            \n            \n                \n                    \n                    isTestEnv()\n                \n            \n\n\n            \n                \n                    Defined in src/common/interceptors/logger/logger.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         boolean\n\n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import * as winston from \"winston\";\n\nexport class LoggerService {\n    private readonly instance: winston.Logger;\n\n    public constructor() {\n        const format = this.isProductionEnv()\n            ? winston.format.combine(\n                  winston.format.timestamp(),\n                  winston.format.json(),\n              )\n            : winston.format.combine(\n                  winston.format.colorize(),\n                  winston.format.simple(),\n              );\n\n        this.instance = winston.createLogger({\n            level: \"info\",\n            silent: this.isTestEnv(),\n            format,\n            transports: [\n                new winston.transports.Console({\n                    stderrLevels: [\"error\"],\n                }),\n            ],\n        });\n    }\n\n    public info(message: string) {\n        this.instance.info(message);\n    }\n\n    public error(message: string) {\n        this.instance.error(message);\n    }\n\n    private isTestEnv(): boolean {\n        return process.env.NODE_ENV === \"test\";\n    }\n\n    private isProductionEnv(): boolean {\n        return (\n            process.env.NODE_ENV === \"production\" ||\n            process.env.NODE_ENV === \"staging\"\n        );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/LoginController.html":{"url":"controllers/LoginController.html","title":"controller - LoginController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  LoginController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/login.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                common\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/login')@UsePipes(ValidationPipe)@ApiBody({type: LoginRequestDto})@ApiResponse({type: LoginResponseDto, description: 'response'})\n                \n            \n\n            \n                \n                    Defined in src/modules/login/login.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        registerUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(createUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/register')@UsePipes(ValidationPipe)@ApiBody({type: RegisterUserDto})@ApiResponse({type: RegisterUserDto, description: 'response'})\n                \n            \n\n            \n                \n                    Defined in src/modules/login/login.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n    Body,\n    Controller,\n    Post,\n    UsePipes,\n    ValidationPipe,\n} from \"@nestjs/common\";\nimport { ApiResponse, ApiTags, ApiBody } from \"@nestjs/swagger\";\nimport { LoginService } from \"./login.service\";\nimport { LoginResponseDto } from \"./dto/login-response.dto\";\nimport { LoginRequestDto } from \"./dto/login-request.dto\";\nimport { AuthService } from \"../../common/middlewares/auth/auth.service\";\nimport { RegisterUserDto } from \"./dto/register-user.dto\";\n\n@Controller(\"common\")\n@ApiTags(\"common\")\nexport class LoginController {\n    public constructor(\n        private readonly loginService: LoginService,\n        private readonly authService: AuthService,\n    ) {}\n\n    @Post(\"/login\")\n    @UsePipes(ValidationPipe)\n    @ApiBody({ type: LoginRequestDto })\n    @ApiResponse({ type: LoginResponseDto, description: \"response\" })\n    async login(@Body() loginDto: LoginRequestDto): Promise {\n        const result = await this.loginService.login(loginDto);\n        const token = await this.authService.createAuthToken(result);\n        return { token };\n    }\n\n    @Post(\"/register\")\n    @UsePipes(ValidationPipe)\n    @ApiBody({ type: RegisterUserDto })\n    @ApiResponse({ type: RegisterUserDto, description: \"response\" })\n    async registerUser(\n        @Body() createUserDto: RegisterUserDto,\n    ): Promise {\n        const result = await this.loginService.register(createUserDto);\n        const token = await this.authService.createAuthToken(result);\n        return { token };\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/LoginModule.html":{"url":"modules/LoginModule.html","title":"module - LoginModule","body":"\n                   \n\n\n\n\n    Modules\n    LoginModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_imports\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/login/login.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            LoginService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            LoginController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            LoginService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { LoginController } from \"./login.controller\";\nimport { LoginService } from \"./login.service\";\nimport { loginConstants } from \"./login.const\";\nimport { UsersSchema } from \"../users/schema/user.schema\";\nimport { AuthModule } from \"../../common/middlewares/auth/auth.module\";\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: loginConstants.LOGIN_SCHEMA, schema: UsersSchema },\n        ]),\n        AuthModule,\n    ],\n    controllers: [LoginController],\n    providers: [LoginService],\n    exports: [LoginService],\n})\nexport class LoginModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginRequestDto.html":{"url":"classes/LoginRequestDto.html","title":"class - LoginRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/dto/login-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                password\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/login-request.dto.ts:13\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/login-request.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty } from \"class-validator\";\n\nexport class LoginRequestDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    userName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginResponseDto.html":{"url":"classes/LoginResponseDto.html","title":"class - LoginResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/dto/login-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                token\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/login-response.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class LoginResponseDto {\n    @ApiProperty()\n    token: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LoginService.html":{"url":"injectables/LoginService.html","title":"injectable - LoginService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  LoginService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/login.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                checkUserNameExists\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                register\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(loginModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/login/login.service.ts:12\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        loginModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        checkUserNameExists\n                        \n                    \n                \n            \n            \n                \n                    \n                    checkUserNameExists(userName: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:58\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    userName\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginDto: LoginRequestDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginDto\n                                    \n                                                LoginRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(createUserDto: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/login/login.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from \"@nestjs/common\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { compare } from \"bcryptjs\";\nimport { hash, genSalt } from \"bcryptjs\";\nimport { loginConstants } from \"./login.const\";\nimport { User } from \"../users/interface/user.interface\";\nimport { LoginRequestDto } from \"./dto/login-request.dto\";\nimport { RegisterUserDto } from \"./dto/register-user.dto\";\n\n@Injectable()\nexport class LoginService {\n    constructor(\n        @InjectModel(loginConstants.LOGIN_SCHEMA)\n        private readonly loginModel: Model,\n    ) {}\n\n    async login(loginDto: LoginRequestDto): Promise {\n        const loginDetails = await this.loginModel.findOne({\n            userName: loginDto.userName,\n        });\n        if (!loginDetails) {\n            throw new HttpException(\n                \"Invalid Credentials\",\n                HttpStatus.UNAUTHORIZED,\n            );\n        }\n        const passwordValidation = await compare(\n            loginDto.password,\n            loginDetails.password,\n        );\n        if (!passwordValidation) {\n            throw new HttpException(\n                \"Invalida Credentials\",\n                HttpStatus.UNAUTHORIZED,\n            );\n        }\n        delete loginDetails.password;\n        return loginDetails;\n    }\n\n    async register(createUserDto: RegisterUserDto): Promise {\n        const isUserExists = await this.checkUserNameExists(\n            createUserDto.userName,\n        );\n        if (isUserExists) {\n            throw new HttpException(\n                \"User Name already Taken! Try with Others\",\n                HttpStatus.CONFLICT,\n            );\n        }\n        const salt = await genSalt(loginConstants.SALT_PASSWORD_LENGHT);\n        createUserDto.password = await hash(createUserDto.password, salt);\n        const result = await this.loginModel.create(createUserDto);\n        await result.save();\n    }\n\n    async checkUserNameExists(userName: string): Promise {\n        const result = await this.loginModel.find({\n            userName,\n        });\n        if (result.length > 0) {\n            return true;\n        }\n        return false;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Movie.html":{"url":"interfaces/Movie.html","title":"interface - Movie","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Movie\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/interface/movies.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            description\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            downVotes\n                                        \n                                \n                                \n                                        \n                                            movieGenre\n                                        \n                                \n                                \n                                        \n                                            movieName\n                                        \n                                \n                                \n                                        \n                                            releaseDate\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            review\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            upVotes\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        downVotes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        downVotes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieGenre\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        movieGenre:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        movieName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        releaseDate\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        releaseDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        review\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        review:         ReviewDetails\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         ReviewDetails\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        upVotes\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        upVotes:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\ninterface ReviewDetails {\n    total: number;\n    average: number;\n    score: number;\n}\n\nexport interface Movie extends Document {\n    movieName: string;\n    movieGenre: string;\n    releaseDate: Date;\n    description?: string;\n    upVotes?: number;\n    downVotes?: number;\n    review?: ReviewDetails;\n    createdAt?: Date;\n    createdBy?: string;\n    updatedAt?: Date;\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/MovieController.html":{"url":"controllers/MovieController.html","title":"controller - MovieController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  MovieController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/movies.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                movies\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addReview\n                            \n                            \n                                    Async\n                                createUser\n                            \n                            \n                                    Async\n                                getMovieById\n                            \n                            \n                                    Async\n                                getMovies\n                            \n                            \n                                    Async\n                                searchMovie\n                            \n                            \n                                    Async\n                                updateMovie\n                            \n                            \n                                    Async\n                                vote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addReview(reviewData: CreateReviewDto, movieId: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':movieId/review')@ApiBody({type: CreateReviewDto})@ApiBearerAuth()\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:117\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    reviewData\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        createUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    createUser(createMovieDto: CreateMovieDto, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Post('/')@ApiBody({type: CreateMovieDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMovieDto\n                                    \n                                                CreateMovieDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMovieById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMovieById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/:id')@ApiParam({name: 'id', description: 'Id of the user'})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMovies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMovies(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Get('/')@ApiQuery({name: 'skip', example: 0})@ApiQuery({name: 'limit', example: 10})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:43\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchMovie\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchMovie(searchMovie: SearchMovieRequestDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('/search')@UsePipes(ValidationPipe)@ApiBody({type: SearchMovieRequestDto})@ApiResponse({type: SearchMovieResponseDto, description: 'response'})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:96\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchMovie\n                                    \n                                                SearchMovieRequestDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateMovie\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateMovie(updateMovieDto: UpdateMovieDto, id: string, request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiBearerAuth()@Put('/:id')@UsePipes(ValidationPipe)@ApiBody({type: UpdateMovieDto})@ApiResponse({type: UpdateMovieDto, description: 'response'})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:75\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    updateMovieDto\n                                    \n                                                UpdateMovieDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    request\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        vote\n                        \n                    \n                \n            \n            \n                \n                    \n                    vote(vote: string, movieId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post(':movieId/vote')@ApiOkResponse()@ApiBearerAuth()@ApiQuery({name: 'vote', enum: undefined})\n                \n            \n\n            \n                \n                    Defined in src/modules/movies/movies.controller.ts:107\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    vote\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    movieId\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n    Controller,\n    Get,\n    Query,\n    Req,\n    Post,\n    UsePipes,\n    ValidationPipe,\n    Body,\n    Put,\n    Param,\n    HttpException,\n    HttpStatus,\n} from \"@nestjs/common\";\nimport { MovieService } from \"./movies.service\";\nimport {\n    ApiQuery,\n    ApiBearerAuth,\n    ApiTags,\n    ApiBody,\n    ApiResponse,\n    ApiParam,\n    ApiOkResponse,\n} from \"@nestjs/swagger\";\nimport { CreateMovieDto } from \"./dto/create-movie.dto\";\nimport { UpdateMovieDto } from \"./dto/update-movie\";\nimport { SearchMovieRequestDto } from \"./dto/search-movie-request.dto\";\nimport { Movie } from \"./interface/movies.interface\";\nimport { SearchMovieResponseDto } from \"./dto/search-movie-response.dto\";\nimport { CreateReviewDto } from \"../reviews/dto/create-review.dto\";\n\n@UsePipes(ValidationPipe)\n@Controller(\"movies\")\n@ApiTags(\"movies\")\nexport class MovieController {\n    public constructor(private readonly movieService: MovieService) {}\n\n    @ApiBearerAuth()\n    @Get(\"/\")\n    @ApiQuery({ name: \"skip\", example: 0 })\n    @ApiQuery({ name: \"limit\", example: 10 })\n    async getMovies(@Query() query): Promise {\n        const limit = query.limit ? Number(query.limit) : 10;\n        const skip = query.skip ? Number(query.skip) : 0;\n        const result = await this.movieService.getMovies(skip, limit);\n        return result;\n    }\n\n    @ApiBearerAuth()\n    @Get(\"/:id\")\n    @ApiParam({ name: \"id\", description: \"Id of the user\" })\n    async getMovieById(@Param(\"id\") id: string) {\n        if (!id) {\n            throw new HttpException(\"Provide Valid Id\", HttpStatus.BAD_REQUEST);\n        }\n        const result = await this.movieService.getMovieById(id);\n        return result;\n    }\n\n    @ApiBearerAuth()\n    @Post(\"/\")\n    @ApiBody({ type: CreateMovieDto })\n    async createUser(@Body() createMovieDto: CreateMovieDto, @Req() request) {\n        const authData = request.user;\n        const result = await this.movieService.create(createMovieDto, authData);\n        return result;\n    }\n\n    @ApiBearerAuth()\n    @Put(\"/:id\")\n    @UsePipes(ValidationPipe)\n    @ApiBody({ type: UpdateMovieDto })\n    @ApiResponse({ type: UpdateMovieDto, description: \"response\" })\n    async updateMovie(\n        @Body() updateMovieDto: UpdateMovieDto,\n        @Param(\"id\") id: string,\n        @Req() request,\n    ) {\n        if (!id) {\n            throw new HttpException(\"Provide Valid Id\", HttpStatus.BAD_REQUEST);\n        }\n        const authData = request.user;\n        const result = await this.movieService.update(\n            id,\n            updateMovieDto,\n            authData,\n        );\n        return result;\n    }\n\n    @Post(\"/search\")\n    @UsePipes(ValidationPipe)\n    @ApiBody({ type: SearchMovieRequestDto })\n    @ApiResponse({ type: SearchMovieResponseDto, description: \"response\" })\n    async searchMovie(\n        @Body() searchMovie: SearchMovieRequestDto,\n    ): Promise {\n        const result = await this.movieService.searchMovie(searchMovie);\n        return result;\n    }\n\n    @Post(\":movieId/vote\")\n    @ApiOkResponse()\n    @ApiBearerAuth()\n    @ApiQuery({ name: \"vote\", enum: [\"LIKE\", \"UNLIKE\"] })\n    async vote(\n        @Query(\"vote\") vote: string,\n        @Param(\"movieId\") movieId: string,\n    ): Promise {\n        await this.movieService.updateVote(movieId, vote);\n    }\n\n    @Post(\":movieId/review\")\n    @ApiBody({ type: CreateReviewDto })\n    @ApiBearerAuth()\n    async addReview(\n        @Body() reviewData: CreateReviewDto,\n        @Param(\"movieId\") movieId: string,\n        @Req() request,\n    ): Promise {\n        await this.movieService.addReview(movieId, reviewData, request.user);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/MovieModule.html":{"url":"modules/MovieModule.html","title":"module - MovieModule","body":"\n                   \n\n\n\n\n    Modules\n    MovieModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_MovieModule\n\n\n\ncluster_MovieModule_imports\n\n\n\ncluster_MovieModule_providers\n\n\n\n\nReviewModule\n\nReviewModule\n\n\n\nMovieModule\n\nMovieModule\n\nMovieModule -->\n\nReviewModule->MovieModule\n\n\n\n\n\nMovieService\n\nMovieService\n\nMovieModule -->\n\nMovieService->MovieModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/movies/movies.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            MovieService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            MovieController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            ReviewModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MovieService } from \"./movies.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { movieConstants } from \"./movies.const\";\nimport { MovieSchema } from \"./schema/movies.schema\";\nimport { MovieController } from \"./movies.controller\";\nimport { ReviewModule } from \"../reviews/reviews.module\";\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: movieConstants.MOVIE_SCHEMA,\n                schema: MovieSchema,\n            },\n        ]),\n        ReviewModule\n    ],\n    controllers: [MovieController],\n    providers: [MovieService],\n    exports: [],\n})\nexport class MovieModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/MovieService.html":{"url":"injectables/MovieService.html","title":"injectable - MovieService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  MovieService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/movies.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                addReview\n                            \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getMovieById\n                            \n                            \n                                    Async\n                                getMovies\n                            \n                            \n                                    Async\n                                searchMovie\n                            \n                            \n                                    Async\n                                update\n                            \n                            \n                                    Async\n                                updateVote\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(movieModel: Model, reviewService: ReviewService)\n                    \n                \n                        \n                            \n                                Defined in src/modules/movies/movies.service.ts:18\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        movieModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        reviewService\n                                                  \n                                                        \n                                                                        ReviewService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        addReview\n                        \n                    \n                \n            \n            \n                \n                    \n                    addReview(_id: string, reviewData: CreateReviewDto, authData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:99\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    reviewData\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createMovieDto: CreateMovieDto, authData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:42\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createMovieDto\n                                    \n                                                CreateMovieDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMovieById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMovieById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getMovies\n                        \n                    \n                \n            \n            \n                \n                    \n                    getMovies(skip: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        searchMovie\n                        \n                    \n                \n            \n            \n                \n                    \n                    searchMovie(searchRequest: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:64\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    searchRequest\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, updateMovieDto: any, authData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:51\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    updateMovieDto\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        updateVote\n                        \n                    \n                \n            \n            \n                \n                    \n                    updateVote(_id: string, vote: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/movies/movies.service.ts:83\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    vote\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    HttpCode,\n    HttpException,\n    HttpStatus,\n    Injectable,\n} from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { movieConstants } from \"./movies.const\";\nimport { Movie } from \"./interface/movies.interface\";\nimport { Model } from \"mongoose\";\nimport { CreateMovieDto } from \"./dto/create-movie.dto\";\nimport { SearchMovieResponseDto } from \"./dto/search-movie-response.dto\";\nimport { CreateReviewDto } from \"../reviews/dto/create-review.dto\";\nimport { ReviewService } from \"../reviews/reviews.service\";\n\n@Injectable()\nexport class MovieService {\n    constructor(\n        @InjectModel(movieConstants.MOVIE_SCHEMA)\n        private readonly movieModel: Model,\n        private readonly reviewService: ReviewService,\n    ) {}\n\n    async getMovies(skip: number, limit: number): Promise {\n        const result = await this.movieModel\n            .find({})\n            .limit(limit)\n            .skip(skip)\n            .sort({ movieName: \"asc\" });\n        return result;\n    }\n\n    async getMovieById(id: string): Promise {\n        const result = await this.movieModel.findById(id);\n        if (!result) {\n            throw new HttpException(\"Movie Not found\", HttpStatus.NOT_FOUND);\n        }\n        return result;\n    }\n\n    async create(\n        createMovieDto: CreateMovieDto,\n        authData: any,\n    ): Promise {\n        createMovieDto.createdBy = authData._id;\n        const result = await this.movieModel.create(createMovieDto);\n        return await result.save();\n    }\n\n    async update(\n        _id: string,\n        updateMovieDto: any,\n        authData: any,\n    ): Promise {\n        updateMovieDto.updatedBy = authData._id;\n        const result = await this.movieModel.findByIdAndUpdate(\n            _id,\n            updateMovieDto,\n        );\n        await result.save();\n    }\n\n    async searchMovie(searchRequest: any): Promise {\n        const result = await this.movieModel\n            .find({\n                movieName: {\n                    $regex: searchRequest.searchText,\n                    $options: \"i\",\n                },\n            })\n            .limit(searchRequest.to)\n            .skip(searchRequest.from)\n            .sort({ [searchRequest.sortKey]: searchRequest.sortBy });\n        const count = await this.movieModel.find().count();\n        const response = {\n            total: count,\n            movies: result,\n        };\n        return response;\n    }\n\n    async updateVote(_id: string, vote: string): Promise {\n        const movieData = await this.getMovieById(_id);\n        const updateData: any = {};\n        if (vote === \"LIKE\") {\n            updateData[\"upVotes\"] = movieData.upVotes + 1;\n            updateData[\"downVotes\"] =\n                movieData.downVotes === 0 ? 0 : (movieData.downVotes -= 1);\n        } else {\n            updateData[\"upVotes\"] =\n                movieData.upVotes === 0 ? 0 : (movieData.upVotes -= 1);\n            updateData[\"downVotes\"] = movieData.downVotes + 1;\n        }\n        const result = await this.movieModel.findByIdAndUpdate(_id, updateData);\n        await result.save();\n    }\n\n    async addReview(\n        _id: string,\n        reviewData: CreateReviewDto,\n        authData: any,\n    ): Promise {\n        const movieData = await this.getMovieById(_id);\n        reviewData.movieId = _id;\n        await this.reviewService.create(reviewData, authData);\n        const total = movieData.review.total + 1;\n        const score = movieData.review.score + reviewData.rating;\n        const average = score / total;\n        const reviewInfo = {\n            total,\n            score,\n            average,\n        };\n        console.log(reviewInfo);\n        const result = await this.movieModel.findByIdAndUpdate(_id, {\n            review: reviewInfo,\n        });\n        await result.save();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/dto/patch-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                favoriteGenres\n                            \n                            \n                                firstName\n                            \n                            \n                                lastName\n                            \n                            \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        favoriteGenres\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsArray()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/patch-user.dto.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsNotEmpty()@IsOptional()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/patch-user.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/patch-user.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/users/dto/patch-user.dto.ts:23\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiPropertyOptional } from \"@nestjs/swagger\";\nimport { IsNotEmpty, IsArray, IsOptional, IsString } from \"class-validator\";\n\nexport class PatchUserDto {\n    @ApiPropertyOptional()\n    @IsString()\n    @IsNotEmpty()\n    @IsOptional()\n    firstName: string;\n\n    @ApiPropertyOptional()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    lastName: string;\n    \n    @ApiPropertyOptional()\n    @IsArray()\n    @IsNotEmpty()\n    @IsOptional()\n    favoriteGenres: string[];\n\n    updatedBy?:string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/dto/register-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                firstName\n                            \n                            \n                                lastLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                password\n                            \n                            \n                                status\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:14\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsDateString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:42\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsBoolean()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user.dto.ts:26\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsBoolean,\n    IsDateString,\n} from \"class-validator\";\n\nexport class RegisterUserDto {\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    firstName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    lastName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    userName: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    password: string;\n\n    @ApiProperty()\n    @IsBoolean()\n    @IsNotEmpty()\n    status: boolean;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsDateString()\n    lastLogin: Date;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserResponseDto.html":{"url":"classes/RegisterUserResponseDto.html","title":"class - RegisterUserResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/login/dto/register-user-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                createdAt\n                            \n                            \n                                createdBy\n                            \n                            \n                                firstName\n                            \n                            \n                                lastLogin\n                            \n                            \n                                lastName\n                            \n                            \n                                status\n                            \n                            \n                                token\n                            \n                            \n                                updatedAt\n                            \n                            \n                                updatedBy\n                            \n                            \n                                userName\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:29\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastLogin\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        token\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:23\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:32\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        userName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/login/dto/register-user-response.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsOptional } from \"class-validator\";\n\nexport class RegisterUserResponseDto {\n    @ApiProperty()\n    firstName: string;\n\n    @ApiProperty()\n    lastName: string;\n\n    @ApiProperty()\n    userName: string;\n\n    @ApiProperty()\n    status: boolean;\n\n    @ApiProperty()\n    lastLogin: Date;\n\n    @ApiProperty()\n    @IsOptional()\n    @IsString()\n    token: string;\n\n    @ApiProperty()\n    createdAt: Date;\n\n    @ApiProperty()\n    createdBy: string;\n\n    @ApiProperty()\n    updatedAt: Date;\n\n    @ApiProperty()\n    updatedBy: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Review.html":{"url":"interfaces/Review.html","title":"interface - Review","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  Review\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/interface/review.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                        \n                                            description\n                                        \n                                \n                                \n                                        \n                                            movieId\n                                        \n                                \n                                \n                                        \n                                            rating\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedBy\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        description\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        description:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        movieId\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        movieId:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        rating\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        rating:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\n\nexport interface Review extends Document {\n    movieId: string;\n    description: string;\n    rating: number;\n    createdAt?: Date;\n    createdBy?: string;\n    updatedAt?: Date;\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ReviewDetails.html":{"url":"interfaces/ReviewDetails.html","title":"interface - ReviewDetails","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ReviewDetails\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/interface/movies.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            average\n                                        \n                                \n                                \n                                        \n                                            score\n                                        \n                                \n                                \n                                        \n                                            total\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        average\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        average:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        score\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        score:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        total\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        total:         number\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         number\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\ninterface ReviewDetails {\n    total: number;\n    average: number;\n    score: number;\n}\n\nexport interface Movie extends Document {\n    movieName: string;\n    movieGenre: string;\n    releaseDate: Date;\n    description?: string;\n    upVotes?: number;\n    downVotes?: number;\n    review?: ReviewDetails;\n    createdAt?: Date;\n    createdBy?: string;\n    updatedAt?: Date;\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ReviewModule.html":{"url":"modules/ReviewModule.html","title":"module - ReviewModule","body":"\n                   \n\n\n\n\n    Modules\n    ReviewModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_ReviewModule\n\n\n\ncluster_ReviewModule_exports\n\n\n\ncluster_ReviewModule_providers\n\n\n\n\nReviewService \n\nReviewService \n\n\n\nReviewModule\n\nReviewModule\n\nReviewService  -->\n\nReviewModule->ReviewService \n\n\n\n\n\nReviewService\n\nReviewService\n\nReviewModule -->\n\nReviewService->ReviewModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/reviews/reviews.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ReviewService\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            ReviewService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { ReviewService } from \"./reviews.service\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { reviewConstants } from \"./reviews.const\";\nimport { ReviewSchema } from \"./schema/review.schema\";\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            {\n                name: reviewConstants.REVIEW_SCHEMA,\n                schema: ReviewSchema,\n            },\n        ]),\n    ],\n    controllers: [],\n    providers: [ReviewService],\n    exports: [ReviewService],\n})\nexport class ReviewModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ReviewService.html":{"url":"injectables/ReviewService.html","title":"injectable - ReviewService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ReviewService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/reviews/reviews.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                getReviewByUserAndMovieId\n                            \n                            \n                                    Async\n                                getReviews\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(reviewModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/reviews/reviews.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        reviewModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createReviewDto: CreateReviewDto, authData: any)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reviews/reviews.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createReviewDto\n                                    \n                                                CreateReviewDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    authData\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getReviewByUserAndMovieId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReviewByUserAndMovieId(movieId, createdBy)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reviews/reviews.service.ts:44\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    movieId\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    createdBy\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getReviews\n                        \n                    \n                \n            \n            \n                \n                    \n                    getReviews(skip: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/reviews/reviews.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { HttpException, HttpStatus, Injectable } from \"@nestjs/common\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { reviewConstants } from \"./reviews.const\";\nimport { Review } from \"./interface/review.interface\";\nimport { Model } from \"mongoose\";\nimport { CreateReviewDto } from \"./dto/create-review.dto\";\n\n@Injectable()\nexport class ReviewService {\n    constructor(\n        @InjectModel(reviewConstants.REVIEW_SCHEMA)\n        private readonly reviewModel: Model,\n    ) {}\n\n    async getReviews(skip: number, limit: number): Promise {\n        const result = await this.reviewModel\n            .find({})\n            .limit(limit)\n            .skip(skip)\n            .sort({ reviewName: \"asc\" });\n        return result;\n    }\n\n    async create(\n        createReviewDto: CreateReviewDto,\n        authData: any,\n    ): Promise {\n        const exitingReview = await this.getReviewByUserAndMovieId(\n            createReviewDto.movieId,\n            authData._id,\n        );\n        if (exitingReview) {\n            throw new HttpException(\n                \"You Already Reviewed\",\n                HttpStatus.CONFLICT,\n            );\n        }\n        createReviewDto.createdBy = authData._id;\n        const result = await this.reviewModel.create(createReviewDto);\n        await result.save();\n    }\n\n    async getReviewByUserAndMovieId(movieId, createdBy): Promise {\n        const result = await this.reviewModel.findOne({ movieId, createdBy });\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchMovieRequestDto.html":{"url":"classes/SearchMovieRequestDto.html","title":"class - SearchMovieRequestDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchMovieRequestDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/dto/search-movie-request.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                from\n                            \n                            \n                                searchText\n                            \n                            \n                                sortBy\n                            \n                            \n                                sortKey\n                            \n                            \n                                to\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        from\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-request.dto.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        searchText\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-request.dto.ts:17\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: undefined})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-request.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        sortKey\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-request.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        to\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsNumber()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-request.dto.ts:13\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsNumber } from \"class-validator\";\n\nexport class SearchMovieRequestDto {\n    @ApiProperty()\n    @IsNumber()\n    @IsNotEmpty()\n    from: number;\n\n    @ApiProperty()\n    @IsNumber()\n    @IsNotEmpty()\n    to: number;\n\n    @ApiProperty()\n    @IsString()\n    searchText: string;\n\n    @ApiProperty({ enum: [\"asc\", \"desc\"] })\n    @IsString()\n    @IsNotEmpty()\n    sortBy: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    sortKey: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/SearchMovieResponseDto.html":{"url":"classes/SearchMovieResponseDto.html","title":"class - SearchMovieResponseDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  SearchMovieResponseDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/dto/search-movie-response.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                movies\n                            \n                            \n                                total\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        movies\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Movie[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-response.dto.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        total\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/search-movie-response.dto.ts:7\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport { IsString, IsNotEmpty, IsNumber } from \"class-validator\";\nimport { Movie } from \"../interface/movies.interface\";\n\nexport class SearchMovieResponseDto {\n    @ApiProperty()\n    total: number;\n    \n    @ApiProperty()\n    movies: Movie[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/UpdateMovieDto.html":{"url":"classes/UpdateMovieDto.html","title":"class - UpdateMovieDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  UpdateMovieDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/movies/dto/update-movie.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                    Optional\n                                createdAt\n                            \n                            \n                                    Optional\n                                createdBy\n                            \n                            \n                                description\n                            \n                            \n                                movieGenre\n                            \n                            \n                                movieName\n                            \n                            \n                                releaseDate\n                            \n                            \n                                    Optional\n                                updatedAt\n                            \n                            \n                                    Optional\n                                updatedBy\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        _id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:10\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        createdBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:35\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsOptional()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:26\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieGenre\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({name: 'movieGenre', enum: undefined})@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:20\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        movieName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        releaseDate\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty()@IsDateString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:31\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedAt\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:37\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Optional\n                        updatedBy\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/modules/movies/dto/update-movie.ts:39\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\nimport {\n    IsString,\n    IsNotEmpty,\n    IsOptional,\n    IsDateString,\n} from \"class-validator\";\n\nexport class UpdateMovieDto {\n    _id: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsNotEmpty()\n    movieName: string;\n\n    @ApiProperty({ name: \"movieGenre\", enum: [\"ACTION\", \"COMEDY\"] })\n    @IsString()\n    @IsNotEmpty()\n    movieGenre: string;\n\n    @ApiProperty()\n    @IsString()\n    @IsOptional()\n    @IsNotEmpty()\n    description: string;\n\n    @ApiProperty()\n    @IsDateString()\n    @IsNotEmpty()\n    releaseDate: Date;\n\n    createdAt?: Date;\n\n    createdBy?: string;\n\n    updatedAt?: Date;\n\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/interface/user.interface.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                    Document\n            \n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                            Optional\n                                        \n                                            createdAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            createdBy\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            favoriteGenres\n                                        \n                                \n                                \n                                        \n                                            firstName\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            lastLogin\n                                        \n                                \n                                \n                                        \n                                            lastName\n                                        \n                                \n                                \n                                        \n                                            password\n                                        \n                                \n                                \n                                        \n                                            status\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedAt\n                                        \n                                \n                                \n                                            Optional\n                                        \n                                            updatedBy\n                                        \n                                \n                                \n                                        \n                                            userName\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        createdAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        createdBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        createdBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        favoriteGenres\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        favoriteGenres:     string[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :     string[]\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        firstName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastLogin\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastLogin:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        lastName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        lastName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        status\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        status:         boolean\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         boolean\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedAt\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedAt:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        updatedBy\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        updatedBy:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n                                    \n                                        \n                                            Optional\n                                        \n                                    \n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userName\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        userName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Document } from \"mongoose\";\n\nexport interface User extends Document {\n    firstName: string;\n    lastName: string;\n    userName: string;\n    password: string;\n    status: boolean;\n    favoriteGenres?: string[];\n    lastLogin?: Date;\n    createdAt?: Date;\n    createdBy?: string;\n    updatedAt?: Date;\n    updatedBy?: string;\n}\n\n    \n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UserController.html":{"url":"controllers/UserController.html","title":"controller - UserController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UserController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                getSessionUser\n                            \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getAllUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers(query)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/')@ApiQuery({name: 'skip', example: 0})@ApiQuery({name: 'limit', example: 0})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/user.controller.ts:45\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    query\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getSessionUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSessionUser(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/me')\n                \n            \n\n            \n                \n                    Defined in src/modules/users/user.controller.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')@ApiParam({name: 'id', description: 'Id of the user'})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/user.controller.ts:63\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    patchUser(patchUserDto: PatchUserDto, id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch('/:id')@ApiBody({type: PatchUserDto})\n                \n            \n\n            \n                \n                    Defined in src/modules/users/user.controller.ts:73\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patchUserDto\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        /* eslint-disable @typescript-eslint/explicit-module-boundary-types */\nimport {\n    Body,\n    Controller,\n    Get,\n    HttpStatus,\n    Post,\n    UsePipes,\n    ValidationPipe,\n    Param,\n    Query,\n    HttpException,\n    Put,\n    Patch,\n    Req,\n} from \"@nestjs/common\";\nimport {\n    ApiBearerAuth,\n    ApiResponse,\n    ApiTags,\n    ApiBody,\n    ApiParam,\n    ApiQuery,\n} from \"@nestjs/swagger\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { UserService } from \"./user.service\";\nimport { CreateUpdateUserResponseDto } from \"./dto/create-update-user-response.dto\";\nimport { AuthService } from \"../../common/middlewares/auth/auth.service\";\nimport { PatchUserDto } from \"./dto/patch-user.dto\";\nimport { User } from \"./interface/user.interface\";\n\n@UsePipes(ValidationPipe)\n@Controller(\"users\")\n@ApiTags(\"users\")\n@ApiBearerAuth()\nexport class UserController {\n    public constructor(\n        private readonly userService: UserService,\n        private readonly authService: AuthService,\n    ) {}\n\n    @Get(\"/\")\n    @ApiQuery({ name: \"skip\", example: 0 })\n    @ApiQuery({ name: \"limit\", example: 0 })\n    async getAllUsers(@Query() query) {\n        const limit = query.limit ? Number(query.limit) : 10;\n        const skip = query.skip ? Number(query.skip) : 0;\n        const result = await this.userService.getUsers(skip, limit);\n        return result;\n    }\n\n    @Get(\"/me\")\n    async getSessionUser(@Req() request): Promise {\n        console.log(request.user);\n        const result = await this.userService.getUserById(\n            request.user._id,\n        );\n        return result;\n    }\n\n    @Get(\"/:id\")\n    @ApiParam({ name: \"id\", description: \"Id of the user\" })\n    async getUserById(@Param(\"id\") id: string) {\n        if (!id) {\n            throw new HttpException(\"Provide Valid Id\", HttpStatus.BAD_REQUEST);\n        }\n        const result = await this.userService.getUserById(id);\n        return result;\n    }\n\n    @Patch(\"/:id\")\n    @ApiBody({ type: PatchUserDto })\n    async patchUser(\n        @Body() patchUserDto: PatchUserDto,\n        @Param(\"id\") id: string,\n    ): Promise {\n        if (!id) {\n            throw new HttpException(\"Provide Valid Id\", HttpStatus.BAD_REQUEST);\n        }\n        const result = await this.userService.update(id, patchUserDto);\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UserModule.html":{"url":"modules/UserModule.html","title":"module - UserModule","body":"\n                   \n\n\n\n\n    Modules\n    UserModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\ncluster_UserModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/modules/users/user.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UserController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from \"@nestjs/common\";\nimport { MongooseModule } from \"@nestjs/mongoose\";\nimport { UserController } from \"./user.controller\";\nimport { UserService } from \"./user.service\";\nimport { UsersSchema } from \"./schema/user.schema\";\nimport { userConstants } from \"./user.const\";\nimport { AuthModule } from \"../../common/middlewares/auth/auth.module\";\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([\n            { name: userConstants.USER_SCHEMA, schema: UsersSchema },\n        ]),\n        AuthModule,\n    ],\n    controllers: [UserController],\n    providers: [UserService],\n    exports: [UserService],\n})\nexport class UserModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/modules/users/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUserById\n                            \n                            \n                                    Async\n                                getUsers\n                            \n                            \n                                    Async\n                                update\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/modules/users/user.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUserById\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUserById(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/user.service.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers(skip: number, limit: number)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/user.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    skip\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    limit\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        update\n                        \n                    \n                \n            \n            \n                \n                    \n                    update(_id: string, patchUserDto: PatchUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/modules/users/user.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    _id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patchUserDto\n                                    \n                                                PatchUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, HttpException, HttpStatus } from \"@nestjs/common\";\nimport { Model } from \"mongoose\";\nimport { InjectModel } from \"@nestjs/mongoose\";\nimport { CreateUserDto } from \"./dto/create-user.dto\";\nimport { User } from \"./interface/user.interface\";\nimport { userConstants } from \"./user.const\";\nimport { PatchUserDto } from \"./dto/patch-user.dto\";\n\n@Injectable()\nexport class UserService {\n    constructor(\n        @InjectModel(userConstants.USER_SCHEMA)\n        private readonly userModel: Model,\n    ) {}\n\n    async update(_id: string, patchUserDto: PatchUserDto): Promise {\n        patchUserDto.updatedBy = _id;\n        const result = await this.userModel.findByIdAndUpdate(\n            _id,\n            patchUserDto,\n        );\n        await result.save();\n    }\n\n    async getUsers(skip: number, limit: number) {\n        const result = await this.userModel\n            .find({}, { password: 0 })\n            .limit(limit)\n            .skip(skip)\n            .sort({ createdAt: \"desc\" });\n        return result;\n    }\n\n    async getUserById(id: string) {\n        const result = await this.userModel.findById(id, { password: 0 });\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ValidationPipe.html":{"url":"injectables/ValidationPipe.html","title":"injectable - ValidationPipe","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ValidationPipe\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/pipes/validation.pipe.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                toValidate\n                            \n                            \n                                    Async\n                                transform\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Private\n                        toValidate\n                        \n                    \n                \n            \n            \n                \n                    \n                    toValidate(metatype: Function)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:34\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    metatype\n                                    \n                                                Function\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         boolean\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        transform\n                        \n                    \n                \n            \n            \n                \n                    \n                    transform(value: any, undefined: ArgumentMetadata)\n                \n            \n\n\n            \n                \n                    Defined in src/common/pipes/validation.pipe.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    value\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    \n                                            ArgumentMetadata\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import {\n    PipeTransform,\n    Injectable,\n    ArgumentMetadata,\n    BadRequestException,\n} from \"@nestjs/common\";\nimport { validate } from \"class-validator\";\nimport { plainToClass } from \"class-transformer\";\n\n@Injectable()\nexport class ValidationPipe implements PipeTransform {\n    async transform(value: any, { metatype }: ArgumentMetadata) {\n        if (!metatype || !this.toValidate(metatype)) {\n            return value;\n        }\n        const object = plainToClass(metatype, value);\n        const errors = await validate(object);\n\n        if (errors.length > 0) {\n            const ValidationMsg = [];\n            errors.forEach(data => {\n                if (data.constraints) {\n                    const keys = Object.keys(data.constraints);\n                    for (const key in keys) {\n                        ValidationMsg.push(data.constraints[keys[key]]);\n                    }\n                }\n            });\n            throw new BadRequestException(ValidationMsg);\n        }\n        return value;\n    }\n\n    private toValidate(metatype: Function): boolean {\n        const types: Function[] = [String, Boolean, Number, Array, Object];\n        return !types.includes(metatype);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/filters/exception.filters.ts\n            \n            class\n            GlobalExceptionFilter\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/interceptors/logger/logger.interceptor.ts\n            \n            injectable\n            LogInterceptor\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/common/interceptors/logger/logger.service.ts\n            \n            class\n            LoggerService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/common/middlewares/auth/auth.middleware.ts\n            \n            injectable\n            AuthMiddleware\n            \n                100 %\n                (3/3)\n            \n        \n        \n            \n                \n                src/common/middlewares/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/common/pipes/validation.pipe.ts\n            \n            injectable\n            ValidationPipe\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/login/dto/login-request.dto.ts\n            \n            class\n            LoginRequestDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/login/dto/login-response.dto.ts\n            \n            class\n            LoginResponseDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/modules/login/dto/register-user-response.dto.ts\n            \n            class\n            RegisterUserResponseDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/modules/login/dto/register-user.dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/modules/login/login.const.ts\n            \n            variable\n            loginConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/login/login.controller.ts\n            \n            controller\n            LoginController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/login/login.service.ts\n            \n            injectable\n            LoginService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/movies/dto/common-movie.dto.ts\n            \n            class\n            CommonMovieDataDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/movies/dto/create-movie.dto.ts\n            \n            class\n            CreateMovieDto\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/movies/dto/search-movie-request.dto.ts\n            \n            class\n            SearchMovieRequestDto\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/modules/movies/dto/search-movie-response.dto.ts\n            \n            class\n            SearchMovieResponseDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/modules/movies/dto/update-movie.ts\n            \n            class\n            UpdateMovieDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/movies/interface/movies.interface.ts\n            \n            interface\n            Movie\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/movies/interface/movies.interface.ts\n            \n            interface\n            ReviewDetails\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/modules/movies/movies.const.ts\n            \n            variable\n            movieConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/movies/movies.controller.ts\n            \n            controller\n            MovieController\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/movies/movies.service.ts\n            \n            injectable\n            MovieService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/modules/movies/schema/movies.schema.ts\n            \n            variable\n            MovieSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reviews/dto/create-review.dto.ts\n            \n            class\n            CreateReviewDto\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/reviews/interface/review.interface.ts\n            \n            interface\n            Review\n            \n                0 %\n                (0/8)\n            \n        \n        \n            \n                \n                src/modules/reviews/reviews.const.ts\n            \n            variable\n            reviewConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/reviews/reviews.service.ts\n            \n            injectable\n            ReviewService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/reviews/schema/review.schema.ts\n            \n            variable\n            ReviewSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-update-user-response.dto.ts\n            \n            class\n            CreateUpdateUserResponseDto\n            \n                0 %\n                (0/14)\n            \n        \n        \n            \n                \n                src/modules/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/10)\n            \n        \n        \n            \n                \n                src/modules/users/dto/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/interface/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/modules/users/schema/user.schema.ts\n            \n            variable\n            UsersSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/user.const.ts\n            \n            variable\n            userConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/users/user.controller.ts\n            \n            controller\n            UserController\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/modules/users/validations/user.validations.ts\n            \n            variable\n            createUserSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @hapi/joi : ^17.1.1\n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.0.0\n        \n            @nestjs/mongoose : ^7.0.1\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.11\n        \n            bcryptjs : ^2.4.3\n        \n            class-transformer : ^0.2.3\n        \n            class-validator : ^0.12.2\n        \n            copy-webpack-plugin : ^6.0.3\n        \n            install : ^0.13.0\n        \n            mongoose : ^5.9.20\n        \n            npm : ^6.14.5\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n        \n            webpack : ^4.43.0\n        \n            webpack-node-externals : ^1.7.2\n        \n            winston : ^3.3.3\n    \n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:cov\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoggerModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        LoginModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        MovieModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ReviewModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UserModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_LoggerModule\n\n\n\ncluster_LoggerModule_exports\n\n\n\ncluster_LoggerModule_providers\n\n\n\ncluster_LoginModule\n\n\n\ncluster_LoginModule_exports\n\n\n\ncluster_LoginModule_providers\n\n\n\ncluster_MovieModule\n\n\n\ncluster_MovieModule_providers\n\n\n\ncluster_ReviewModule\n\n\n\ncluster_ReviewModule_exports\n\n\n\ncluster_ReviewModule_providers\n\n\n\ncluster_UserModule\n\n\n\ncluster_UserModule_exports\n\n\n\ncluster_UserModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nLoginModule\n\nLoginModule\n\nLoginModule -->\n\nAuthModule->LoginModule\n\n\n\n\n\nUserModule\n\nUserModule\n\nUserModule -->\n\nAuthModule->UserModule\n\n\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nLoggerModule\n\nLoggerModule\n\nAppModule -->\n\nLoggerModule->AppModule\n\n\n\n\n\nLogInterceptor \n\nLogInterceptor \n\nLogInterceptor  -->\n\nLoggerModule->LogInterceptor \n\n\n\n\n\nLoggerService \n\nLoggerService \n\nLoggerService  -->\n\nLoggerModule->LoggerService \n\n\n\nAppModule -->\n\nLoginModule->AppModule\n\n\n\n\n\nLoginService \n\nLoginService \n\nLoginService  -->\n\nLoginModule->LoginService \n\n\n\n\n\nMovieModule\n\nMovieModule\n\nAppModule -->\n\nMovieModule->AppModule\n\n\n\n\n\nReviewModule\n\nReviewModule\n\nMovieModule -->\n\nReviewModule->MovieModule\n\n\n\nAppModule -->\n\nReviewModule->AppModule\n\n\n\n\n\nReviewService \n\nReviewService \n\nReviewService  -->\n\nReviewModule->ReviewService \n\n\n\nAppModule -->\n\nUserModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUserModule->UserService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nLogInterceptor\n\nLogInterceptor\n\nLoggerModule -->\n\nLogInterceptor->LoggerModule\n\n\n\n\n\nLoginService\n\nLoginService\n\nLoginModule -->\n\nLoginService->LoginModule\n\n\n\n\n\nMovieService\n\nMovieService\n\nMovieModule -->\n\nMovieService->MovieModule\n\n\n\n\n\nReviewService\n\nReviewService\n\nReviewModule -->\n\nReviewService->ReviewModule\n\n\n\n\n\nUserService\n\nUserService\n\nUserModule -->\n\nUserService->UserModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        7 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    8 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    15 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    4 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            createUserSchema   (src/.../user.validations.ts)\n                        \n                        \n                            loginConstants   (src/.../login.const.ts)\n                        \n                        \n                            movieConstants   (src/.../movies.const.ts)\n                        \n                        \n                            MovieSchema   (src/.../movies.schema.ts)\n                        \n                        \n                            reviewConstants   (src/.../reviews.const.ts)\n                        \n                        \n                            ReviewSchema   (src/.../review.schema.ts)\n                        \n                        \n                            userConstants   (src/.../user.const.ts)\n                        \n                        \n                            UsersSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/users/validations/user.validations.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        createUserSchema\n                        \n                    \n                \n            \n                \n                    \n                        Type :     Joi.Schema\n\n                    \n                \n                \n                    \n                        Default value : Joi.object().keys({\n    name: Joi.string().required(),\n    age: Joi.number()\n        .min(0)\n        .max(150)\n        .required(),\n})\n                    \n                \n\n\n        \n    \n\n    src/modules/login/login.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loginConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    LOGIN_SCHEMA: \"User\",\n    SALT_PASSWORD_LENGHT: 10,\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/movies/movies.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        movieConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    MOVIE_SCHEMA: \"Movie\",\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/movies/schema/movies.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        MovieSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        movieName: { type: String, required: true, unique: true },\n        movieGenre: { type: String, required: true },\n        description: { type: String },\n        releaseDate: { type: Date, required: true },\n        upVotes: { type: Number, default: 0 },\n        downVotes: { type: Number, default: 0 },\n        review: {\n            total: { type: Number, default: 0 },\n            score: { type: Number, default: 0 },\n            average: { type: Number, default: 0 },\n        },\n        createdAt: { type: Date, default: Date.now },\n        createdBy: { type: String },\n        updatedAt: { type: Date, default: Date.now },\n        updatedBy: { type: String },\n    },\n    { timestamps: true, versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/reviews/reviews.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        reviewConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    REVIEW_SCHEMA: \"Review\",\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/reviews/schema/review.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        ReviewSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        movieId: { type: String, required: true },\n        description: { type: String, required: true },\n        rating: { type: Number, default: 0 },\n        createdAt: { type: Date, default: Date.now },\n        createdBy: { type: String },\n        updatedAt: { type: Date, default: Date.now },\n        updatedBy: { type: String },\n    },\n    { timestamps: true, versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n    src/modules/users/user.const.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        userConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    USER_SCHEMA: \"User\",\n    SALT_PASSWORD_LENGHT: 10,\n}\n                    \n                \n\n\n        \n    \n\n    src/modules/users/schema/user.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        UsersSchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new mongoose.Schema(\n    {\n        firstName: { type: String, required: true },\n        lastName: { type: String },\n        userName: { type: String, required: true },\n        password: { type: String, required: true },\n        status: { type: Boolean, required: true },\n        favoriteGenres: [{ type: String }],\n        lastLogin: { type: Date, default: Date.now },\n        createdAt: { type: Date, default: Date.now },\n        createdBy: { type: String },\n        updatedAt: { type: Date, default: Date.now },\n        updatedBy: { type: String },\n    },\n    { timestamps: true, versionKey: false },\n)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
